
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COLON COMENTARIO COMMA CONFORME CONFORME CTEDECI CTEENT CTEFRASE CTELETRA DIVIDE ELSE ELSE EQUAL ESCRITURA ESCRITURA FALSE FALSE FOR FOR FUNCION FUNCION GT GTE ID IF IF IN IN LBRACE LCURLY LECTURA LECTURA LPAREN LT LTE MAIN MAIN MINUS NEQUAL OR PLUS PROGRAMA PROGRAMA RBRACE RCURLY RETURN RETURN RPAREN TIMES TIPODEC TIPODEC TIPOENT TIPOENT TIPOLETRA TIPOLETRA TIPOLOGI TIPOLOGI TRUE TRUE VAR VAR VOID VOID WHILE WHILE\n        programa : PROGRAMA ID programaB programaC inicio\n        programaB : dec_vars\n                | empty\n        programaC : dec_func programaCC\n        programaCC : programaC\n                | empty\n        \n        dec_vars : VAR dec_varsI COLON tipo dec_varsB dec_varsBB\n        dec_varsI : ID dec_varsII\n        dec_varsII : COMMA ID\n                | empty\n        dec_varsB : LBRACE CTEENT RBRACE\n                | LBRACE CTEENT RBRACE LBRACE CTEENT RBRACE\n                | empty\n        dec_varsBB : dec_vars\n                | empty\n        \n        tipo : TIPOENT\n            | TIPODEC\n            | TIPOLETRA\n            | TIPOLOGI\n        \n        dec_func : FUNCION ID LPAREN dec_params RPAREN COLON tipo_func LCURLY bloque RCURLY\n        \n        dec_params : ID COLON tipo dec_paramsB\n        dec_paramsB : COMMA dec_params\n                    | empty\n        \n        tipo_func : tipo\n                | VOID\n        \n        bloque : bloqueB bloqueBB\n        bloqueB : asignacion\n                | ciclo_para_cada\n                | ciclo_mientras\n                | condicion\n                | escribir\n                | leer\n                | dec_vars\n                | llam_func\n                | regresar\n        bloqueBB : bloqueB bloqueBB\n                | empty\n        \n        asignacion : llam_vars ASSIGN expresion\n        \n        llam_vars : ID llam_varsB\n        llam_varsB : LBRACE CTEENT RBRACE\n                | LBRACE CTEENT RBRACE LBRACE CTEENT RBRACE\n                | empty\n        \n        expresion : peta_exp expresionB\n        expresionB : ASSIGN expresion\n                | empty\n        \n        peta_exp : tera_exp peta_expB\n        peta_expB : AND peta_exp\n                | OR peta_exp\n                | empty\n        \n        tera_exp : mega_exp tera_expB\n        tera_expB : LT tera_exp\n                | GT tera_exp\n                | LTE tera_exp\n                | GTE tera_exp\n                | EQUAL tera_exp\n                | NEQUAL tera_exp\n                | empty\n        \n        mega_exp : kilo_exp mega_expB\n        mega_expB : PLUS mega_exp\n                | MINUS mega_exp\n                | empty\n        \n        kilo_exp : factor kilo_expB\n        kilo_expB : TIMES kilo_exp\n                | DIVIDE kilo_exp\n                | empty\n        \n        factor : LPAREN expresion RPAREN\n            | llam_vars\n            | llam_func\n            | CTEENT\n            | CTEDECI\n        \n        llam_func : ID LPAREN llam_params RPAREN\n        \n        llam_params : expresion llam_paramsB\n        llam_paramsB : COMMA llam_params\n                    | empty\n        \n        ciclo_para_cada : FOR LPAREN ID IN ID ciclo_para_cadaB RPAREN LCURLY bloque RCURLY\n        ciclo_para_cadaB : CONFORME expresion\n                        | empty\n        \n        ciclo_mientras : WHILE LPAREN expresion RPAREN LCURLY bloque RCURLY\n        \n        condicion : IF LPAREN expresion RPAREN LCURLY bloque RCURLY condicionB\n        condicionB : ELSE LCURLY bloque RCURLY\n                | empty\n        \n        escribir : ESCRITURA LPAREN escribirB RPAREN\n        escribirB : expresion escribirBB\n                | CTEFRASE escribirBB\n        escribirBB : COMMA escribirB\n                | empty\n        \n        leer : LECTURA LPAREN leerI RPAREN\n        leerI : ID leerII\n        leerII : COMMA ID\n            | empty\n        \n        regresar : RETURN LPAREN expresion RPAREN\n        \n        inicio : MAIN LPAREN RPAREN LCURLY bloque RCURLY\n        \n        empty :\n        '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,13,66,],[0,-1,-92,]),'ID':([2,7,10,21,24,25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,70,71,72,73,75,76,77,78,79,80,82,89,90,91,92,93,94,95,96,97,98,99,100,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,143,145,148,150,153,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,183,190,191,192,193,194,196,198,199,201,],[3,12,18,30,32,-93,-16,-17,-18,-19,-93,-13,57,-7,-14,-15,57,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,57,100,101,100,-39,-42,100,100,100,111,100,32,-67,-38,-93,-93,-93,-93,-93,100,-68,-69,-70,-93,57,-43,100,-45,-46,100,100,-49,-50,100,100,100,100,100,100,-57,-58,100,100,-61,-62,100,100,-65,174,-71,100,-40,-82,100,-87,180,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,57,57,100,-41,-78,-93,57,-79,-81,57,-75,-80,]),'VAR':([3,25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[7,-93,-16,-17,-18,-19,7,-13,7,-7,-14,-15,7,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,7,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,7,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,7,7,-41,-78,-93,7,-79,-81,7,-75,-80,]),'FUNCION':([3,4,5,6,9,25,26,27,28,29,34,36,40,41,42,65,159,181,],[-93,10,-2,-3,10,-93,-16,-17,-18,-19,-93,-13,-7,-14,-15,-11,-12,-20,]),'MAIN':([8,9,15,16,17,181,],[14,-93,-4,-5,-6,-20,]),'COLON':([11,12,20,22,30,32,39,],[19,-93,-8,-10,-9,38,64,]),'COMMA':([12,26,27,28,29,63,73,75,89,91,92,93,94,95,97,98,99,100,103,108,109,111,116,118,119,122,123,130,131,134,135,138,141,145,160,161,162,163,164,165,166,167,168,169,170,171,172,173,190,],[21,-16,-17,-18,-19,82,-39,-42,-67,-93,-93,-93,-93,-93,-68,-69,-70,-93,143,150,150,155,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,-41,]),'LPAREN':([14,18,56,57,58,59,60,61,62,70,72,76,77,78,80,96,100,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,183,],[23,24,71,72,76,77,78,79,80,96,96,96,96,96,96,96,72,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'TIPOENT':([19,38,64,],[26,26,26,]),'TIPODEC':([19,38,64,],[27,27,27,]),'TIPOLETRA':([19,38,64,],[28,28,28,]),'TIPOLOGI':([19,38,64,],[29,29,29,]),'RPAREN':([23,26,27,28,29,33,63,73,75,81,83,89,91,92,93,94,95,97,98,99,100,102,103,105,106,107,108,109,110,111,112,113,116,118,119,122,123,130,131,134,135,138,139,141,142,144,145,149,151,152,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,180,182,184,189,190,],[31,-16,-17,-18,-19,39,-93,-39,-42,-21,-23,-67,-93,-93,-93,-93,-93,-68,-69,-70,-93,141,-93,146,147,148,-93,-93,153,-93,157,-22,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,173,-71,-72,-74,-40,-83,-86,-84,-88,-90,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,-93,-73,-85,-89,188,-77,-76,-41,]),'LBRACE':([25,26,27,28,29,57,65,100,145,],[35,-16,-17,-18,-19,74,87,74,176,]),'FOR':([25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[-93,-16,-17,-18,-19,-93,-13,56,-7,-14,-15,56,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,56,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,56,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,56,56,-41,-78,-93,56,-79,-81,56,-75,-80,]),'WHILE':([25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[-93,-16,-17,-18,-19,-93,-13,58,-7,-14,-15,58,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,58,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,58,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,58,58,-41,-78,-93,58,-79,-81,58,-75,-80,]),'IF':([25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[-93,-16,-17,-18,-19,-93,-13,59,-7,-14,-15,59,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,59,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,59,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,59,59,-41,-78,-93,59,-79,-81,59,-75,-80,]),'ESCRITURA':([25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[-93,-16,-17,-18,-19,-93,-13,60,-7,-14,-15,60,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,60,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,60,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,60,60,-41,-78,-93,60,-79,-81,60,-75,-80,]),'LECTURA':([25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[-93,-16,-17,-18,-19,-93,-13,61,-7,-14,-15,61,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,61,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,61,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,61,61,-41,-78,-93,61,-79,-81,61,-75,-80,]),'RETURN':([25,26,27,28,29,34,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,65,67,73,75,89,90,91,92,93,94,95,97,98,99,100,114,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,190,191,192,193,194,196,198,199,201,],[-93,-16,-17,-18,-19,-93,-13,62,-7,-14,-15,62,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,62,-39,-42,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,62,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,62,62,-41,-78,-93,62,-79,-81,62,-75,-80,]),'RCURLY':([25,26,27,28,29,34,36,40,41,42,44,45,46,47,48,49,50,51,52,53,54,65,67,68,69,73,75,88,89,90,91,92,93,94,95,97,98,99,100,116,118,119,122,123,130,131,134,135,138,141,145,148,153,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,186,187,190,191,192,194,196,197,199,200,201,],[-93,-16,-17,-18,-19,-93,-13,-7,-14,-15,66,-93,-27,-28,-29,-30,-31,-32,-33,-34,-35,-11,-93,-26,-37,-39,-42,-36,-67,-38,-93,-93,-93,-93,-93,-68,-69,-70,-93,-43,-45,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-82,-87,-91,181,-12,-44,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,191,192,-41,-78,-93,-79,-81,199,-75,201,-80,]),'LCURLY':([26,27,28,29,31,84,85,86,146,147,188,195,],[-16,-17,-18,-19,37,114,-24,-25,177,178,193,198,]),'CTEENT':([35,70,72,74,76,77,78,80,87,96,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,176,183,],[43,98,98,104,98,98,98,98,115,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,185,98,]),'RBRACE':([43,104,115,185,],[65,145,159,190,]),'ASSIGN':([55,57,73,75,89,91,92,93,94,95,97,98,99,100,119,122,123,130,131,134,135,138,141,145,161,162,163,164,165,166,167,168,169,170,171,172,173,190,],[70,-93,-39,-42,-67,117,-93,-93,-93,-93,-68,-69,-70,-93,-46,-49,-50,-57,-58,-61,-62,-65,-71,-40,-47,-48,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,-41,]),'VOID':([64,],[86,]),'CTEDECI':([70,72,76,77,78,80,96,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,183,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'TIMES':([73,75,89,95,97,98,99,100,141,145,173,190,],[-39,-42,-67,136,-68,-69,-70,-93,-71,-40,-66,-41,]),'DIVIDE':([73,75,89,95,97,98,99,100,141,145,173,190,],[-39,-42,-67,137,-68,-69,-70,-93,-71,-40,-66,-41,]),'PLUS':([73,75,89,94,95,97,98,99,100,135,138,141,145,171,172,173,190,],[-39,-42,-67,132,-93,-68,-69,-70,-93,-62,-65,-71,-40,-63,-64,-66,-41,]),'MINUS':([73,75,89,94,95,97,98,99,100,135,138,141,145,171,172,173,190,],[-39,-42,-67,133,-93,-68,-69,-70,-93,-62,-65,-71,-40,-63,-64,-66,-41,]),'LT':([73,75,89,93,94,95,97,98,99,100,131,134,135,138,141,145,169,170,171,172,173,190,],[-39,-42,-67,124,-93,-93,-68,-69,-70,-93,-58,-61,-62,-65,-71,-40,-59,-60,-63,-64,-66,-41,]),'GT':([73,75,89,93,94,95,97,98,99,100,131,134,135,138,141,145,169,170,171,172,173,190,],[-39,-42,-67,125,-93,-93,-68,-69,-70,-93,-58,-61,-62,-65,-71,-40,-59,-60,-63,-64,-66,-41,]),'LTE':([73,75,89,93,94,95,97,98,99,100,131,134,135,138,141,145,169,170,171,172,173,190,],[-39,-42,-67,126,-93,-93,-68,-69,-70,-93,-58,-61,-62,-65,-71,-40,-59,-60,-63,-64,-66,-41,]),'GTE':([73,75,89,93,94,95,97,98,99,100,131,134,135,138,141,145,169,170,171,172,173,190,],[-39,-42,-67,127,-93,-93,-68,-69,-70,-93,-58,-61,-62,-65,-71,-40,-59,-60,-63,-64,-66,-41,]),'EQUAL':([73,75,89,93,94,95,97,98,99,100,131,134,135,138,141,145,169,170,171,172,173,190,],[-39,-42,-67,128,-93,-93,-68,-69,-70,-93,-58,-61,-62,-65,-71,-40,-59,-60,-63,-64,-66,-41,]),'NEQUAL':([73,75,89,93,94,95,97,98,99,100,131,134,135,138,141,145,169,170,171,172,173,190,],[-39,-42,-67,129,-93,-93,-68,-69,-70,-93,-58,-61,-62,-65,-71,-40,-59,-60,-63,-64,-66,-41,]),'AND':([73,75,89,92,93,94,95,97,98,99,100,123,130,131,134,135,138,141,145,163,164,165,166,167,168,169,170,171,172,173,190,],[-39,-42,-67,120,-93,-93,-93,-68,-69,-70,-93,-50,-57,-58,-61,-62,-65,-71,-40,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,-41,]),'OR':([73,75,89,92,93,94,95,97,98,99,100,123,130,131,134,135,138,141,145,163,164,165,166,167,168,169,170,171,172,173,190,],[-39,-42,-67,121,-93,-93,-93,-68,-69,-70,-93,-50,-57,-58,-61,-62,-65,-71,-40,-51,-52,-53,-54,-55,-56,-59,-60,-63,-64,-66,-41,]),'CTEFRASE':([78,150,],[109,109,]),'IN':([101,],[140,]),'CONFORME':([174,],[183,]),'ELSE':([192,],[195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programaB':([3,],[4,]),'dec_vars':([3,34,37,45,67,114,177,178,193,198,],[5,41,52,52,52,52,52,52,52,52,]),'empty':([3,9,12,25,34,45,57,63,67,91,92,93,94,95,100,103,108,109,111,174,192,],[6,17,22,36,42,69,75,83,69,118,122,130,134,138,75,144,151,151,156,184,196,]),'programaC':([4,9,],[8,16,]),'dec_func':([4,9,],[9,9,]),'dec_varsI':([7,],[11,]),'inicio':([8,],[13,]),'programaCC':([9,],[15,]),'dec_varsII':([12,],[20,]),'tipo':([19,38,64,],[25,63,85,]),'dec_params':([24,82,],[33,113,]),'dec_varsB':([25,],[34,]),'dec_varsBB':([34,],[40,]),'bloque':([37,114,177,178,193,198,],[44,158,186,187,197,200,]),'bloqueB':([37,45,67,114,177,178,193,198,],[45,67,67,45,45,45,45,45,]),'asignacion':([37,45,67,114,177,178,193,198,],[46,46,46,46,46,46,46,46,]),'ciclo_para_cada':([37,45,67,114,177,178,193,198,],[47,47,47,47,47,47,47,47,]),'ciclo_mientras':([37,45,67,114,177,178,193,198,],[48,48,48,48,48,48,48,48,]),'condicion':([37,45,67,114,177,178,193,198,],[49,49,49,49,49,49,49,49,]),'escribir':([37,45,67,114,177,178,193,198,],[50,50,50,50,50,50,50,50,]),'leer':([37,45,67,114,177,178,193,198,],[51,51,51,51,51,51,51,51,]),'llam_func':([37,45,67,70,72,76,77,78,80,96,114,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,177,178,183,193,198,],[53,53,53,97,97,97,97,97,97,97,53,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,53,53,97,53,53,]),'regresar':([37,45,67,114,177,178,193,198,],[54,54,54,54,54,54,54,54,]),'llam_vars':([37,45,67,70,72,76,77,78,80,96,114,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,177,178,183,193,198,],[55,55,55,89,89,89,89,89,89,89,55,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,55,55,89,55,55,]),'bloqueBB':([45,67,],[68,88,]),'llam_varsB':([57,100,],[73,73,]),'dec_paramsB':([63,],[81,]),'tipo_func':([64,],[84,]),'expresion':([70,72,76,77,78,80,96,117,143,150,183,],[90,103,105,106,108,112,139,160,103,108,189,]),'peta_exp':([70,72,76,77,78,80,96,117,120,121,143,150,183,],[91,91,91,91,91,91,91,91,161,162,91,91,91,]),'tera_exp':([70,72,76,77,78,80,96,117,120,121,124,125,126,127,128,129,143,150,183,],[92,92,92,92,92,92,92,92,92,92,163,164,165,166,167,168,92,92,92,]),'mega_exp':([70,72,76,77,78,80,96,117,120,121,124,125,126,127,128,129,132,133,143,150,183,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,169,170,93,93,93,]),'kilo_exp':([70,72,76,77,78,80,96,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,183,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,171,172,94,94,94,]),'factor':([70,72,76,77,78,80,96,117,120,121,124,125,126,127,128,129,132,133,136,137,143,150,183,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'llam_params':([72,143,],[102,175,]),'escribirB':([78,150,],[107,179,]),'leerI':([79,],[110,]),'expresionB':([91,],[116,]),'peta_expB':([92,],[119,]),'tera_expB':([93,],[123,]),'mega_expB':([94,],[131,]),'kilo_expB':([95,],[135,]),'llam_paramsB':([103,],[142,]),'escribirBB':([108,109,],[149,152,]),'leerII':([111,],[154,]),'ciclo_para_cadaB':([174,],[182,]),'condicionB':([192,],[194,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID programaB programaC inicio','programa',5,'p_programa','js_parser.py',16),
  ('programaB -> dec_vars','programaB',1,'p_programa','js_parser.py',17),
  ('programaB -> empty','programaB',1,'p_programa','js_parser.py',18),
  ('programaC -> dec_func programaCC','programaC',2,'p_programa','js_parser.py',19),
  ('programaCC -> programaC','programaCC',1,'p_programa','js_parser.py',20),
  ('programaCC -> empty','programaCC',1,'p_programa','js_parser.py',21),
  ('dec_vars -> VAR dec_varsI COLON tipo dec_varsB dec_varsBB','dec_vars',6,'p_dec_vars','js_parser.py',27),
  ('dec_varsI -> ID dec_varsII','dec_varsI',2,'p_dec_vars','js_parser.py',28),
  ('dec_varsII -> COMMA ID','dec_varsII',2,'p_dec_vars','js_parser.py',29),
  ('dec_varsII -> empty','dec_varsII',1,'p_dec_vars','js_parser.py',30),
  ('dec_varsB -> LBRACE CTEENT RBRACE','dec_varsB',3,'p_dec_vars','js_parser.py',31),
  ('dec_varsB -> LBRACE CTEENT RBRACE LBRACE CTEENT RBRACE','dec_varsB',6,'p_dec_vars','js_parser.py',32),
  ('dec_varsB -> empty','dec_varsB',1,'p_dec_vars','js_parser.py',33),
  ('dec_varsBB -> dec_vars','dec_varsBB',1,'p_dec_vars','js_parser.py',34),
  ('dec_varsBB -> empty','dec_varsBB',1,'p_dec_vars','js_parser.py',35),
  ('tipo -> TIPOENT','tipo',1,'p_tipo','js_parser.py',41),
  ('tipo -> TIPODEC','tipo',1,'p_tipo','js_parser.py',42),
  ('tipo -> TIPOLETRA','tipo',1,'p_tipo','js_parser.py',43),
  ('tipo -> TIPOLOGI','tipo',1,'p_tipo','js_parser.py',44),
  ('dec_func -> FUNCION ID LPAREN dec_params RPAREN COLON tipo_func LCURLY bloque RCURLY','dec_func',10,'p_dec_func','js_parser.py',50),
  ('dec_params -> ID COLON tipo dec_paramsB','dec_params',4,'p_dec_params','js_parser.py',57),
  ('dec_paramsB -> COMMA dec_params','dec_paramsB',2,'p_dec_params','js_parser.py',58),
  ('dec_paramsB -> empty','dec_paramsB',1,'p_dec_params','js_parser.py',59),
  ('tipo_func -> tipo','tipo_func',1,'p_tipo_func','js_parser.py',65),
  ('tipo_func -> VOID','tipo_func',1,'p_tipo_func','js_parser.py',66),
  ('bloque -> bloqueB bloqueBB','bloque',2,'p_bloque','js_parser.py',72),
  ('bloqueB -> asignacion','bloqueB',1,'p_bloque','js_parser.py',73),
  ('bloqueB -> ciclo_para_cada','bloqueB',1,'p_bloque','js_parser.py',74),
  ('bloqueB -> ciclo_mientras','bloqueB',1,'p_bloque','js_parser.py',75),
  ('bloqueB -> condicion','bloqueB',1,'p_bloque','js_parser.py',76),
  ('bloqueB -> escribir','bloqueB',1,'p_bloque','js_parser.py',77),
  ('bloqueB -> leer','bloqueB',1,'p_bloque','js_parser.py',78),
  ('bloqueB -> dec_vars','bloqueB',1,'p_bloque','js_parser.py',79),
  ('bloqueB -> llam_func','bloqueB',1,'p_bloque','js_parser.py',80),
  ('bloqueB -> regresar','bloqueB',1,'p_bloque','js_parser.py',81),
  ('bloqueBB -> bloqueB bloqueBB','bloqueBB',2,'p_bloque','js_parser.py',82),
  ('bloqueBB -> empty','bloqueBB',1,'p_bloque','js_parser.py',83),
  ('asignacion -> llam_vars ASSIGN expresion','asignacion',3,'p_asignacion','js_parser.py',89),
  ('llam_vars -> ID llam_varsB','llam_vars',2,'p_llam_vars','js_parser.py',95),
  ('llam_varsB -> LBRACE CTEENT RBRACE','llam_varsB',3,'p_llam_vars','js_parser.py',96),
  ('llam_varsB -> LBRACE CTEENT RBRACE LBRACE CTEENT RBRACE','llam_varsB',6,'p_llam_vars','js_parser.py',97),
  ('llam_varsB -> empty','llam_varsB',1,'p_llam_vars','js_parser.py',98),
  ('expresion -> peta_exp expresionB','expresion',2,'p_expresion','js_parser.py',104),
  ('expresionB -> ASSIGN expresion','expresionB',2,'p_expresion','js_parser.py',105),
  ('expresionB -> empty','expresionB',1,'p_expresion','js_parser.py',106),
  ('peta_exp -> tera_exp peta_expB','peta_exp',2,'p_peta_exp','js_parser.py',112),
  ('peta_expB -> AND peta_exp','peta_expB',2,'p_peta_exp','js_parser.py',113),
  ('peta_expB -> OR peta_exp','peta_expB',2,'p_peta_exp','js_parser.py',114),
  ('peta_expB -> empty','peta_expB',1,'p_peta_exp','js_parser.py',115),
  ('tera_exp -> mega_exp tera_expB','tera_exp',2,'p_tera_exp','js_parser.py',121),
  ('tera_expB -> LT tera_exp','tera_expB',2,'p_tera_exp','js_parser.py',122),
  ('tera_expB -> GT tera_exp','tera_expB',2,'p_tera_exp','js_parser.py',123),
  ('tera_expB -> LTE tera_exp','tera_expB',2,'p_tera_exp','js_parser.py',124),
  ('tera_expB -> GTE tera_exp','tera_expB',2,'p_tera_exp','js_parser.py',125),
  ('tera_expB -> EQUAL tera_exp','tera_expB',2,'p_tera_exp','js_parser.py',126),
  ('tera_expB -> NEQUAL tera_exp','tera_expB',2,'p_tera_exp','js_parser.py',127),
  ('tera_expB -> empty','tera_expB',1,'p_tera_exp','js_parser.py',128),
  ('mega_exp -> kilo_exp mega_expB','mega_exp',2,'p_mega_exp','js_parser.py',134),
  ('mega_expB -> PLUS mega_exp','mega_expB',2,'p_mega_exp','js_parser.py',135),
  ('mega_expB -> MINUS mega_exp','mega_expB',2,'p_mega_exp','js_parser.py',136),
  ('mega_expB -> empty','mega_expB',1,'p_mega_exp','js_parser.py',137),
  ('kilo_exp -> factor kilo_expB','kilo_exp',2,'p_kilo_exp','js_parser.py',143),
  ('kilo_expB -> TIMES kilo_exp','kilo_expB',2,'p_kilo_exp','js_parser.py',144),
  ('kilo_expB -> DIVIDE kilo_exp','kilo_expB',2,'p_kilo_exp','js_parser.py',145),
  ('kilo_expB -> empty','kilo_expB',1,'p_kilo_exp','js_parser.py',146),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','js_parser.py',152),
  ('factor -> llam_vars','factor',1,'p_factor','js_parser.py',153),
  ('factor -> llam_func','factor',1,'p_factor','js_parser.py',154),
  ('factor -> CTEENT','factor',1,'p_factor','js_parser.py',155),
  ('factor -> CTEDECI','factor',1,'p_factor','js_parser.py',156),
  ('llam_func -> ID LPAREN llam_params RPAREN','llam_func',4,'p_llam_func','js_parser.py',162),
  ('llam_params -> expresion llam_paramsB','llam_params',2,'p_llam_params','js_parser.py',168),
  ('llam_paramsB -> COMMA llam_params','llam_paramsB',2,'p_llam_params','js_parser.py',169),
  ('llam_paramsB -> empty','llam_paramsB',1,'p_llam_params','js_parser.py',170),
  ('ciclo_para_cada -> FOR LPAREN ID IN ID ciclo_para_cadaB RPAREN LCURLY bloque RCURLY','ciclo_para_cada',10,'p_ciclo_para_cada','js_parser.py',176),
  ('ciclo_para_cadaB -> CONFORME expresion','ciclo_para_cadaB',2,'p_ciclo_para_cada','js_parser.py',177),
  ('ciclo_para_cadaB -> empty','ciclo_para_cadaB',1,'p_ciclo_para_cada','js_parser.py',178),
  ('ciclo_mientras -> WHILE LPAREN expresion RPAREN LCURLY bloque RCURLY','ciclo_mientras',7,'p_ciclo_mientras','js_parser.py',184),
  ('condicion -> IF LPAREN expresion RPAREN LCURLY bloque RCURLY condicionB','condicion',8,'p_condicion','js_parser.py',190),
  ('condicionB -> ELSE LCURLY bloque RCURLY','condicionB',4,'p_condicion','js_parser.py',191),
  ('condicionB -> empty','condicionB',1,'p_condicion','js_parser.py',192),
  ('escribir -> ESCRITURA LPAREN escribirB RPAREN','escribir',4,'p_escribir','js_parser.py',198),
  ('escribirB -> expresion escribirBB','escribirB',2,'p_escribir','js_parser.py',199),
  ('escribirB -> CTEFRASE escribirBB','escribirB',2,'p_escribir','js_parser.py',200),
  ('escribirBB -> COMMA escribirB','escribirBB',2,'p_escribir','js_parser.py',201),
  ('escribirBB -> empty','escribirBB',1,'p_escribir','js_parser.py',202),
  ('leer -> LECTURA LPAREN leerI RPAREN','leer',4,'p_leer','js_parser.py',208),
  ('leerI -> ID leerII','leerI',2,'p_leer','js_parser.py',209),
  ('leerII -> COMMA ID','leerII',2,'p_leer','js_parser.py',210),
  ('leerII -> empty','leerII',1,'p_leer','js_parser.py',211),
  ('regresar -> RETURN LPAREN expresion RPAREN','regresar',4,'p_regresar','js_parser.py',217),
  ('inicio -> MAIN LPAREN RPAREN LCURLY bloque RCURLY','inicio',6,'p_inicio','js_parser.py',223),
  ('empty -> <empty>','empty',0,'p_empty','js_parser.py',229),
]
