Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio punto_semantico_16
Rule 2     programaB -> dec_vars
Rule 3     programaB -> empty
Rule 4     programaC -> dec_func programaCC
Rule 5     programaCC -> programaC
Rule 6     programaCC -> empty
Rule 7     dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
Rule 8     dec_varsI -> ID punto_semantico_4 dec_varsII
Rule 9     dec_varsII -> COMMA ID punto_semantico_4 dec_varsII
Rule 10    dec_varsII -> empty
Rule 11    dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2
Rule 12    dec_varsB -> empty
Rule 13    dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE
Rule 14    dec_varsB2 -> empty
Rule 15    dec_varsBB -> dec_vars
Rule 16    dec_varsBB -> empty
Rule 17    tipo -> TIPOENT
Rule 18    tipo -> TIPODEC
Rule 19    tipo -> TIPOLETRA
Rule 20    tipo -> TIPOLOGI
Rule 21    dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
Rule 22    dec_funcB -> dec_params
Rule 23    dec_funcB -> empty
Rule 24    dec_params -> ID punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB
Rule 25    dec_paramsB -> COMMA dec_params
Rule 26    dec_paramsB -> empty
Rule 27    tipo_func -> tipo
Rule 28    tipo_func -> VOID
Rule 29    bloque -> bloqueB bloqueBB
Rule 30    bloqueB -> asignacion
Rule 31    bloqueB -> ciclo_para_cada
Rule 32    bloqueB -> ciclo_mientras
Rule 33    bloqueB -> condicion
Rule 34    bloqueB -> escribir
Rule 35    bloqueB -> leer
Rule 36    bloqueB -> dec_vars
Rule 37    bloqueB -> llam_func
Rule 38    bloqueB -> regresar
Rule 39    bloqueBB -> bloqueB bloqueBB
Rule 40    bloqueBB -> empty
Rule 41    asignacion -> llam_vars ASSIGN expresion punto_codigoI_12
Rule 42    llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6
Rule 43    llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
Rule 44    llam_varsB -> empty
Rule 45    llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9
Rule 46    llam_varsB2 -> empty
Rule 47    expresion -> peta_exp
Rule 48    peta_exp -> tera_exp punto_codigoI_4 peta_expB
Rule 49    peta_expB -> AND punto_codigoI_3 peta_exp
Rule 50    peta_expB -> OR punto_codigoI_3 peta_exp
Rule 51    peta_expB -> empty
Rule 52    tera_exp -> mega_exp punto_codigoI_5 tera_expB
Rule 53    tera_expB -> LT punto_codigoI_3 tera_exp
Rule 54    tera_expB -> GT punto_codigoI_3 tera_exp
Rule 55    tera_expB -> LTE punto_codigoI_3 tera_exp
Rule 56    tera_expB -> GTE punto_codigoI_3 tera_exp
Rule 57    tera_expB -> EQUAL punto_codigoI_3 tera_exp
Rule 58    tera_expB -> NEQUAL punto_codigoI_3 tera_exp
Rule 59    tera_expB -> empty
Rule 60    mega_exp -> kilo_exp punto_codigoI_6 mega_expB
Rule 61    mega_expB -> PLUS punto_codigoI_3 mega_exp
Rule 62    mega_expB -> MINUS punto_codigoI_3 mega_exp
Rule 63    mega_expB -> empty
Rule 64    kilo_exp -> factor punto_codigoI_7 kilo_expB
Rule 65    kilo_expB -> TIMES punto_codigoI_3 kilo_exp
Rule 66    kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp
Rule 67    kilo_expB -> empty
Rule 68    factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
Rule 69    factor -> llam_vars
Rule 70    factor -> llam_func
Rule 71    factor -> CTEENT punto_semantico_17 punto_codigoI_2
Rule 72    factor -> CTEDECI punto_semantico_17 punto_codigoI_2
Rule 73    factor -> cte_bool punto_semantico_17 punto_codigoI_2
Rule 74    factor -> CTELETRA punto_semantico_17 punto_codigoI_2
Rule 75    factor -> CTEFRASE punto_semantico_17 punto_codigoI_2
Rule 76    llam_func -> ID LPAREN llam_params RPAREN
Rule 77    cte_bool -> TRUE
Rule 78    cte_bool -> FALSE
Rule 79    llam_params -> expresion llam_paramsB
Rule 80    llam_paramsB -> COMMA llam_params
Rule 81    llam_paramsB -> empty
Rule 82    ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
Rule 83    ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8
Rule 84    ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
Rule 85    condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
Rule 86    condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY
Rule 87    condicionB -> empty
Rule 88    escribir -> ESCRITURA LPAREN escribirB RPAREN
Rule 89    escribirB -> expresion punto_codigoI_10 escribirBB
Rule 90    escribirB -> CTEFRASE punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
Rule 91    escribirB -> CTELETRA punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
Rule 92    escribirBB -> COMMA escribirB
Rule 93    escribirBB -> empty
Rule 94    leer -> LECTURA LPAREN leerB RPAREN
Rule 95    leerB -> ID punto_codigoI_1 punto_codigoI_11 leerBB
Rule 96    leerBB -> COMMA leerB
Rule 97    leerBB -> empty
Rule 98    regresar -> RETURN LPAREN expresion RPAREN
Rule 99    inicio -> MAIN punto_semantico_15 LPAREN RPAREN LCURLY bloque RCURLY punto_semantico_14
Rule 100   empty -> <empty>
Rule 101   puntos_semantica_1 -> <empty>
Rule 102   puntos_semantica_2 -> <empty>
Rule 103   punto_semantico_3 -> <empty>
Rule 104   punto_semantico_4 -> <empty>
Rule 105   punto_semantico_5 -> <empty>
Rule 106   punto_semantico_6 -> <empty>
Rule 107   punto_semantico_7 -> <empty>
Rule 108   punto_semantico_8 -> <empty>
Rule 109   punto_semantico_9 -> <empty>
Rule 110   punto_semantico_10 -> <empty>
Rule 111   punto_semantico_11 -> <empty>
Rule 112   punto_semantico_12 -> <empty>
Rule 113   punto_semantico_13 -> <empty>
Rule 114   punto_semantico_14 -> <empty>
Rule 115   punto_semantico_15 -> <empty>
Rule 116   punto_semantico_16 -> <empty>
Rule 117   punto_semantico_17 -> <empty>
Rule 118   punto_codigoI_0 -> <empty>
Rule 119   punto_codigoI_1 -> <empty>
Rule 120   punto_codigoI_2 -> <empty>
Rule 121   punto_codigoI_3 -> <empty>
Rule 122   punto_codigoI_4 -> <empty>
Rule 123   punto_codigoI_5 -> <empty>
Rule 124   punto_codigoI_6 -> <empty>
Rule 125   punto_codigoI_7 -> <empty>
Rule 126   punto_codigoI_8 -> <empty>
Rule 127   punto_codigoI_9 -> <empty>
Rule 128   punto_codigoI_10 -> <empty>
Rule 129   punto_codigoI_11 -> <empty>
Rule 130   punto_codigoI_12 -> <empty>
Rule 131   punto_codigoII_1 -> <empty>
Rule 132   punto_codigoII_2 -> <empty>
Rule 133   punto_codigoII_3 -> <empty>
Rule 134   punto_codigoII_4 -> <empty>
Rule 135   punto_codigoII_5 -> <empty>
Rule 136   punto_codigoII_6 -> <empty>
Rule 137   punto_codigoII_7 -> <empty>
Rule 138   punto_codigoII_8 -> <empty>
Rule 139   punto_codigoII_9 -> <empty>
Rule 140   punto_codigoII_10 -> <empty>
Rule 141   punto_arreglos_1 -> <empty>
Rule 142   punto_arreglos_2 -> <empty>
Rule 143   punto_arreglos_3 -> <empty>
Rule 144   punto_arreglos_4 -> <empty>
Rule 145   punto_arreglos_5 -> <empty>
Rule 146   punto_arreglos_6 -> <empty>

Terminals, with rules where they appear

AND                  : 49
ASSIGN               : 41 83
COLON                : 7 21 24 83
COMMA                : 9 25 80 92 96
CTEDECI              : 72
CTEENT               : 11 13 71
CTEFRASE             : 75 90
CTELETRA             : 74 91
DIVIDE               : 66
ELSE                 : 86
EQUAL                : 57
ESCRITURA            : 88
FALSE                : 78
FOR                  : 82
FUNCION              : 21
GT                   : 54
GTE                  : 56
ID                   : 1 8 9 21 24 42 76 83 95
IF                   : 85
LBRACE               : 11 13 43 45
LCURLY               : 21 82 84 85 86 99
LECTURA              : 94
LPAREN               : 21 68 76 82 84 85 88 94 98 99
LT                   : 53
LTE                  : 55
MAIN                 : 99
MINUS                : 62
NEQUAL               : 58
OR                   : 50
PLUS                 : 61
PROGRAMA             : 1
RBRACE               : 11 13 43 45
RCURLY               : 21 82 84 85 86 99
RETURN               : 98
RPAREN               : 21 68 76 82 84 85 88 94 98 99
TIMES                : 65
TIPODEC              : 18
TIPOENT              : 17
TIPOLETRA            : 19
TIPOLOGI             : 20
TO                   : 82
TRUE                 : 77
VAR                  : 7 83
VOID                 : 28
WHILE                : 84
error                : 

Nonterminals, with rules where they appear

asignacion           : 30
bloque               : 21 82 84 85 86 99
bloqueB              : 29 39
bloqueBB             : 29 39
ciclo_mientras       : 32
ciclo_para_cada      : 31
ciclo_para_cadaB     : 82
condicion            : 33
condicionB           : 85
cte_bool             : 73
dec_func             : 4
dec_funcB            : 21
dec_params           : 22 25
dec_paramsB          : 24
dec_vars             : 2 15 36
dec_varsB            : 7
dec_varsB2           : 11
dec_varsBB           : 7
dec_varsI            : 7
dec_varsII           : 8 9
empty                : 3 6 10 12 14 16 23 26 40 44 46 51 59 63 67 81 87 93 97
escribir             : 34
escribirB            : 88 92
escribirBB           : 89 90 91
expresion            : 41 43 45 68 79 82 83 84 85 89 98
factor               : 64
inicio               : 1
kilo_exp             : 60 65 66
kilo_expB            : 64
leer                 : 35
leerB                : 94 96
leerBB               : 95
llam_func            : 37 70
llam_params          : 76 80
llam_paramsB         : 79
llam_vars            : 41 69
llam_varsB           : 42
llam_varsB2          : 43
mega_exp             : 52 61 62
mega_expB            : 60
peta_exp             : 47 49 50
peta_expB            : 48
programa             : 0
programaB            : 1
programaC            : 1 5
programaCC           : 4
punto_arreglos_1     : 43
punto_arreglos_2     : 43
punto_arreglos_3     : 45
punto_arreglos_4     : 43
punto_arreglos_5     : 45
punto_arreglos_6     : 42
punto_codigoII_1     : 85
punto_codigoII_10    : 82
punto_codigoII_2     : 86
punto_codigoII_3     : 85
punto_codigoII_4     : 84
punto_codigoII_5     : 84
punto_codigoII_6     : 84
punto_codigoII_7     : 83
punto_codigoII_8     : 83
punto_codigoII_9     : 82
punto_codigoI_0      : 1
punto_codigoI_1      : 42 95
punto_codigoI_10     : 89 90 91
punto_codigoI_11     : 95
punto_codigoI_12     : 41
punto_codigoI_2      : 71 72 73 74 75 90 91
punto_codigoI_3      : 49 50 53 54 55 56 57 58 61 62 65 66
punto_codigoI_4      : 48
punto_codigoI_5      : 52
punto_codigoI_6      : 60
punto_codigoI_7      : 64
punto_codigoI_8      : 43 45 68
punto_codigoI_9      : 43 45 68
punto_semantico_10   : 21
punto_semantico_11   : 24
punto_semantico_12   : 24
punto_semantico_13   : 21
punto_semantico_14   : 21 99
punto_semantico_15   : 99
punto_semantico_16   : 1
punto_semantico_17   : 71 72 73 74 75 90 91
punto_semantico_3    : 7 21 83
punto_semantico_4    : 8 9 83
punto_semantico_5    : 7 24 83
punto_semantico_6    : 11
punto_semantico_7    : 13
punto_semantico_8    : 7 83
punto_semantico_9    : 21
puntos_semantica_1   : 1
puntos_semantica_2   : 1
regresar             : 38
tera_exp             : 48 53 54 55 56 57 58
tera_expB            : 52
tipo                 : 7 24 27 83
tipo_func            : 21

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio punto_semantico_16

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio punto_semantico_16
    (101) puntos_semantica_1 -> .

    ID              reduce using rule 101 (puntos_semantica_1 -> .)

    puntos_semantica_1             shift and go to state 3

state 3

    (1) programa -> PROGRAMA puntos_semantica_1 . punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio punto_semantico_16
    (118) punto_codigoI_0 -> .

    ID              reduce using rule 118 (punto_codigoI_0 -> .)

    punto_codigoI_0                shift and go to state 4

state 4

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 . ID puntos_semantica_2 programaB programaC inicio punto_semantico_16

    ID              shift and go to state 5


state 5

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID . puntos_semantica_2 programaB programaC inicio punto_semantico_16
    (102) puntos_semantica_2 -> .

    VAR             reduce using rule 102 (puntos_semantica_2 -> .)
    FUNCION         reduce using rule 102 (puntos_semantica_2 -> .)

    puntos_semantica_2             shift and go to state 6

state 6

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 . programaB programaC inicio punto_semantico_16
    (2) programaB -> . dec_vars
    (3) programaB -> . empty
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (100) empty -> .

    VAR             shift and go to state 10
    FUNCION         reduce using rule 100 (empty -> .)

    programaB                      shift and go to state 7
    dec_vars                       shift and go to state 8
    empty                          shift and go to state 9

state 7

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB . programaC inicio punto_semantico_16
    (4) programaC -> . dec_func programaCC
    (21) dec_func -> . FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14

    FUNCION         shift and go to state 13

    programaC                      shift and go to state 11
    dec_func                       shift and go to state 12

state 8

    (2) programaB -> dec_vars .

    FUNCION         reduce using rule 2 (programaB -> dec_vars .)


state 9

    (3) programaB -> empty .

    FUNCION         reduce using rule 3 (programaB -> empty .)


state 10

    (7) dec_vars -> VAR . punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (103) punto_semantico_3 -> .

    ID              reduce using rule 103 (punto_semantico_3 -> .)

    punto_semantico_3              shift and go to state 14

state 11

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC . inicio punto_semantico_16
    (99) inicio -> . MAIN punto_semantico_15 LPAREN RPAREN LCURLY bloque RCURLY punto_semantico_14

    MAIN            shift and go to state 16

    inicio                         shift and go to state 15

state 12

    (4) programaC -> dec_func . programaCC
    (5) programaCC -> . programaC
    (6) programaCC -> . empty
    (4) programaC -> . dec_func programaCC
    (100) empty -> .
    (21) dec_func -> . FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14

    MAIN            reduce using rule 100 (empty -> .)
    FUNCION         shift and go to state 13

    dec_func                       shift and go to state 12
    programaCC                     shift and go to state 17
    programaC                      shift and go to state 18
    empty                          shift and go to state 19

state 13

    (21) dec_func -> FUNCION . punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
    (109) punto_semantico_9 -> .

    ID              reduce using rule 109 (punto_semantico_9 -> .)

    punto_semantico_9              shift and go to state 20

state 14

    (7) dec_vars -> VAR punto_semantico_3 . dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (8) dec_varsI -> . ID punto_semantico_4 dec_varsII

    ID              shift and go to state 22

    dec_varsI                      shift and go to state 21

state 15

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio . punto_semantico_16
    (116) punto_semantico_16 -> .

    $end            reduce using rule 116 (punto_semantico_16 -> .)

    punto_semantico_16             shift and go to state 23

state 16

    (99) inicio -> MAIN . punto_semantico_15 LPAREN RPAREN LCURLY bloque RCURLY punto_semantico_14
    (115) punto_semantico_15 -> .

    LPAREN          reduce using rule 115 (punto_semantico_15 -> .)

    punto_semantico_15             shift and go to state 24

state 17

    (4) programaC -> dec_func programaCC .

    MAIN            reduce using rule 4 (programaC -> dec_func programaCC .)


state 18

    (5) programaCC -> programaC .

    MAIN            reduce using rule 5 (programaCC -> programaC .)


state 19

    (6) programaCC -> empty .

    MAIN            reduce using rule 6 (programaCC -> empty .)


state 20

    (21) dec_func -> FUNCION punto_semantico_9 . ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14

    ID              shift and go to state 25


state 21

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI . COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB

    COLON           shift and go to state 26


state 22

    (8) dec_varsI -> ID . punto_semantico_4 dec_varsII
    (104) punto_semantico_4 -> .

    COMMA           reduce using rule 104 (punto_semantico_4 -> .)
    COLON           reduce using rule 104 (punto_semantico_4 -> .)

    punto_semantico_4              shift and go to state 27

state 23

    (1) programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio punto_semantico_16 .

    $end            reduce using rule 1 (programa -> PROGRAMA puntos_semantica_1 punto_codigoI_0 ID puntos_semantica_2 programaB programaC inicio punto_semantico_16 .)


state 24

    (99) inicio -> MAIN punto_semantico_15 . LPAREN RPAREN LCURLY bloque RCURLY punto_semantico_14

    LPAREN          shift and go to state 28


state 25

    (21) dec_func -> FUNCION punto_semantico_9 ID . punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
    (110) punto_semantico_10 -> .

    LPAREN          reduce using rule 110 (punto_semantico_10 -> .)

    punto_semantico_10             shift and go to state 29

state 26

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI COLON . tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (17) tipo -> . TIPOENT
    (18) tipo -> . TIPODEC
    (19) tipo -> . TIPOLETRA
    (20) tipo -> . TIPOLOGI

    TIPOENT         shift and go to state 31
    TIPODEC         shift and go to state 32
    TIPOLETRA       shift and go to state 33
    TIPOLOGI        shift and go to state 34

    tipo                           shift and go to state 30

state 27

    (8) dec_varsI -> ID punto_semantico_4 . dec_varsII
    (9) dec_varsII -> . COMMA ID punto_semantico_4 dec_varsII
    (10) dec_varsII -> . empty
    (100) empty -> .

    COMMA           shift and go to state 36
    COLON           reduce using rule 100 (empty -> .)

    dec_varsII                     shift and go to state 35
    empty                          shift and go to state 37

state 28

    (99) inicio -> MAIN punto_semantico_15 LPAREN . RPAREN LCURLY bloque RCURLY punto_semantico_14

    RPAREN          shift and go to state 38


state 29

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 . LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14

    LPAREN          shift and go to state 39


state 30

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo . punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (105) punto_semantico_5 -> .

    LBRACE          reduce using rule 105 (punto_semantico_5 -> .)
    VAR             reduce using rule 105 (punto_semantico_5 -> .)
    FUNCION         reduce using rule 105 (punto_semantico_5 -> .)
    FOR             reduce using rule 105 (punto_semantico_5 -> .)
    WHILE           reduce using rule 105 (punto_semantico_5 -> .)
    IF              reduce using rule 105 (punto_semantico_5 -> .)
    ESCRITURA       reduce using rule 105 (punto_semantico_5 -> .)
    LECTURA         reduce using rule 105 (punto_semantico_5 -> .)
    ID              reduce using rule 105 (punto_semantico_5 -> .)
    RETURN          reduce using rule 105 (punto_semantico_5 -> .)
    RCURLY          reduce using rule 105 (punto_semantico_5 -> .)

    punto_semantico_5              shift and go to state 40

state 31

    (17) tipo -> TIPOENT .

    LBRACE          reduce using rule 17 (tipo -> TIPOENT .)
    VAR             reduce using rule 17 (tipo -> TIPOENT .)
    FUNCION         reduce using rule 17 (tipo -> TIPOENT .)
    FOR             reduce using rule 17 (tipo -> TIPOENT .)
    WHILE           reduce using rule 17 (tipo -> TIPOENT .)
    IF              reduce using rule 17 (tipo -> TIPOENT .)
    ESCRITURA       reduce using rule 17 (tipo -> TIPOENT .)
    LECTURA         reduce using rule 17 (tipo -> TIPOENT .)
    ID              reduce using rule 17 (tipo -> TIPOENT .)
    RETURN          reduce using rule 17 (tipo -> TIPOENT .)
    RCURLY          reduce using rule 17 (tipo -> TIPOENT .)
    COMMA           reduce using rule 17 (tipo -> TIPOENT .)
    RPAREN          reduce using rule 17 (tipo -> TIPOENT .)
    LCURLY          reduce using rule 17 (tipo -> TIPOENT .)
    ASSIGN          reduce using rule 17 (tipo -> TIPOENT .)


state 32

    (18) tipo -> TIPODEC .

    LBRACE          reduce using rule 18 (tipo -> TIPODEC .)
    VAR             reduce using rule 18 (tipo -> TIPODEC .)
    FUNCION         reduce using rule 18 (tipo -> TIPODEC .)
    FOR             reduce using rule 18 (tipo -> TIPODEC .)
    WHILE           reduce using rule 18 (tipo -> TIPODEC .)
    IF              reduce using rule 18 (tipo -> TIPODEC .)
    ESCRITURA       reduce using rule 18 (tipo -> TIPODEC .)
    LECTURA         reduce using rule 18 (tipo -> TIPODEC .)
    ID              reduce using rule 18 (tipo -> TIPODEC .)
    RETURN          reduce using rule 18 (tipo -> TIPODEC .)
    RCURLY          reduce using rule 18 (tipo -> TIPODEC .)
    COMMA           reduce using rule 18 (tipo -> TIPODEC .)
    RPAREN          reduce using rule 18 (tipo -> TIPODEC .)
    LCURLY          reduce using rule 18 (tipo -> TIPODEC .)
    ASSIGN          reduce using rule 18 (tipo -> TIPODEC .)


state 33

    (19) tipo -> TIPOLETRA .

    LBRACE          reduce using rule 19 (tipo -> TIPOLETRA .)
    VAR             reduce using rule 19 (tipo -> TIPOLETRA .)
    FUNCION         reduce using rule 19 (tipo -> TIPOLETRA .)
    FOR             reduce using rule 19 (tipo -> TIPOLETRA .)
    WHILE           reduce using rule 19 (tipo -> TIPOLETRA .)
    IF              reduce using rule 19 (tipo -> TIPOLETRA .)
    ESCRITURA       reduce using rule 19 (tipo -> TIPOLETRA .)
    LECTURA         reduce using rule 19 (tipo -> TIPOLETRA .)
    ID              reduce using rule 19 (tipo -> TIPOLETRA .)
    RETURN          reduce using rule 19 (tipo -> TIPOLETRA .)
    RCURLY          reduce using rule 19 (tipo -> TIPOLETRA .)
    COMMA           reduce using rule 19 (tipo -> TIPOLETRA .)
    RPAREN          reduce using rule 19 (tipo -> TIPOLETRA .)
    LCURLY          reduce using rule 19 (tipo -> TIPOLETRA .)
    ASSIGN          reduce using rule 19 (tipo -> TIPOLETRA .)


state 34

    (20) tipo -> TIPOLOGI .

    LBRACE          reduce using rule 20 (tipo -> TIPOLOGI .)
    VAR             reduce using rule 20 (tipo -> TIPOLOGI .)
    FUNCION         reduce using rule 20 (tipo -> TIPOLOGI .)
    FOR             reduce using rule 20 (tipo -> TIPOLOGI .)
    WHILE           reduce using rule 20 (tipo -> TIPOLOGI .)
    IF              reduce using rule 20 (tipo -> TIPOLOGI .)
    ESCRITURA       reduce using rule 20 (tipo -> TIPOLOGI .)
    LECTURA         reduce using rule 20 (tipo -> TIPOLOGI .)
    ID              reduce using rule 20 (tipo -> TIPOLOGI .)
    RETURN          reduce using rule 20 (tipo -> TIPOLOGI .)
    RCURLY          reduce using rule 20 (tipo -> TIPOLOGI .)
    COMMA           reduce using rule 20 (tipo -> TIPOLOGI .)
    RPAREN          reduce using rule 20 (tipo -> TIPOLOGI .)
    LCURLY          reduce using rule 20 (tipo -> TIPOLOGI .)
    ASSIGN          reduce using rule 20 (tipo -> TIPOLOGI .)


state 35

    (8) dec_varsI -> ID punto_semantico_4 dec_varsII .

    COLON           reduce using rule 8 (dec_varsI -> ID punto_semantico_4 dec_varsII .)


state 36

    (9) dec_varsII -> COMMA . ID punto_semantico_4 dec_varsII

    ID              shift and go to state 41


state 37

    (10) dec_varsII -> empty .

    COLON           reduce using rule 10 (dec_varsII -> empty .)


state 38

    (99) inicio -> MAIN punto_semantico_15 LPAREN RPAREN . LCURLY bloque RCURLY punto_semantico_14

    LCURLY          shift and go to state 42


state 39

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN . punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
    (103) punto_semantico_3 -> .

    ID              reduce using rule 103 (punto_semantico_3 -> .)
    RPAREN          reduce using rule 103 (punto_semantico_3 -> .)

    punto_semantico_3              shift and go to state 43

state 40

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 . dec_varsB punto_semantico_8 dec_varsBB
    (11) dec_varsB -> . LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2
    (12) dec_varsB -> . empty
    (100) empty -> .

    LBRACE          shift and go to state 45
    VAR             reduce using rule 100 (empty -> .)
    FUNCION         reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

    dec_varsB                      shift and go to state 44
    empty                          shift and go to state 46

state 41

    (9) dec_varsII -> COMMA ID . punto_semantico_4 dec_varsII
    (104) punto_semantico_4 -> .

    COMMA           reduce using rule 104 (punto_semantico_4 -> .)
    COLON           reduce using rule 104 (punto_semantico_4 -> .)

    punto_semantico_4              shift and go to state 47

state 42

    (99) inicio -> MAIN punto_semantico_15 LPAREN RPAREN LCURLY . bloque RCURLY punto_semantico_14
    (29) bloque -> . bloqueB bloqueBB
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloque                         shift and go to state 48
    bloqueB                        shift and go to state 49
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 43

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 . dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
    (22) dec_funcB -> . dec_params
    (23) dec_funcB -> . empty
    (24) dec_params -> . ID punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB
    (100) empty -> .

    ID              shift and go to state 67
    RPAREN          reduce using rule 100 (empty -> .)

    dec_funcB                      shift and go to state 68
    dec_params                     shift and go to state 69
    empty                          shift and go to state 70

state 44

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB . punto_semantico_8 dec_varsBB
    (108) punto_semantico_8 -> .

    VAR             reduce using rule 108 (punto_semantico_8 -> .)
    FUNCION         reduce using rule 108 (punto_semantico_8 -> .)
    FOR             reduce using rule 108 (punto_semantico_8 -> .)
    WHILE           reduce using rule 108 (punto_semantico_8 -> .)
    IF              reduce using rule 108 (punto_semantico_8 -> .)
    ESCRITURA       reduce using rule 108 (punto_semantico_8 -> .)
    LECTURA         reduce using rule 108 (punto_semantico_8 -> .)
    ID              reduce using rule 108 (punto_semantico_8 -> .)
    RETURN          reduce using rule 108 (punto_semantico_8 -> .)
    RCURLY          reduce using rule 108 (punto_semantico_8 -> .)

    punto_semantico_8              shift and go to state 71

state 45

    (11) dec_varsB -> LBRACE . CTEENT punto_semantico_6 RBRACE dec_varsB2

    CTEENT          shift and go to state 72


state 46

    (12) dec_varsB -> empty .

    VAR             reduce using rule 12 (dec_varsB -> empty .)
    FUNCION         reduce using rule 12 (dec_varsB -> empty .)
    FOR             reduce using rule 12 (dec_varsB -> empty .)
    WHILE           reduce using rule 12 (dec_varsB -> empty .)
    IF              reduce using rule 12 (dec_varsB -> empty .)
    ESCRITURA       reduce using rule 12 (dec_varsB -> empty .)
    LECTURA         reduce using rule 12 (dec_varsB -> empty .)
    ID              reduce using rule 12 (dec_varsB -> empty .)
    RETURN          reduce using rule 12 (dec_varsB -> empty .)
    RCURLY          reduce using rule 12 (dec_varsB -> empty .)


state 47

    (9) dec_varsII -> COMMA ID punto_semantico_4 . dec_varsII
    (9) dec_varsII -> . COMMA ID punto_semantico_4 dec_varsII
    (10) dec_varsII -> . empty
    (100) empty -> .

    COMMA           shift and go to state 36
    COLON           reduce using rule 100 (empty -> .)

    dec_varsII                     shift and go to state 73
    empty                          shift and go to state 37

state 48

    (99) inicio -> MAIN punto_semantico_15 LPAREN RPAREN LCURLY bloque . RCURLY punto_semantico_14

    RCURLY          shift and go to state 74


state 49

    (29) bloque -> bloqueB . bloqueBB
    (39) bloqueBB -> . bloqueB bloqueBB
    (40) bloqueBB -> . empty
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (100) empty -> .
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    RCURLY          reduce using rule 100 (empty -> .)
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloqueB                        shift and go to state 75
    bloqueBB                       shift and go to state 76
    empty                          shift and go to state 77
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 50

    (30) bloqueB -> asignacion .

    FOR             reduce using rule 30 (bloqueB -> asignacion .)
    WHILE           reduce using rule 30 (bloqueB -> asignacion .)
    IF              reduce using rule 30 (bloqueB -> asignacion .)
    ESCRITURA       reduce using rule 30 (bloqueB -> asignacion .)
    LECTURA         reduce using rule 30 (bloqueB -> asignacion .)
    VAR             reduce using rule 30 (bloqueB -> asignacion .)
    ID              reduce using rule 30 (bloqueB -> asignacion .)
    RETURN          reduce using rule 30 (bloqueB -> asignacion .)
    RCURLY          reduce using rule 30 (bloqueB -> asignacion .)


state 51

    (31) bloqueB -> ciclo_para_cada .

    FOR             reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    WHILE           reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    IF              reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    ESCRITURA       reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    LECTURA         reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    VAR             reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    ID              reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    RETURN          reduce using rule 31 (bloqueB -> ciclo_para_cada .)
    RCURLY          reduce using rule 31 (bloqueB -> ciclo_para_cada .)


state 52

    (32) bloqueB -> ciclo_mientras .

    FOR             reduce using rule 32 (bloqueB -> ciclo_mientras .)
    WHILE           reduce using rule 32 (bloqueB -> ciclo_mientras .)
    IF              reduce using rule 32 (bloqueB -> ciclo_mientras .)
    ESCRITURA       reduce using rule 32 (bloqueB -> ciclo_mientras .)
    LECTURA         reduce using rule 32 (bloqueB -> ciclo_mientras .)
    VAR             reduce using rule 32 (bloqueB -> ciclo_mientras .)
    ID              reduce using rule 32 (bloqueB -> ciclo_mientras .)
    RETURN          reduce using rule 32 (bloqueB -> ciclo_mientras .)
    RCURLY          reduce using rule 32 (bloqueB -> ciclo_mientras .)


state 53

    (33) bloqueB -> condicion .

    FOR             reduce using rule 33 (bloqueB -> condicion .)
    WHILE           reduce using rule 33 (bloqueB -> condicion .)
    IF              reduce using rule 33 (bloqueB -> condicion .)
    ESCRITURA       reduce using rule 33 (bloqueB -> condicion .)
    LECTURA         reduce using rule 33 (bloqueB -> condicion .)
    VAR             reduce using rule 33 (bloqueB -> condicion .)
    ID              reduce using rule 33 (bloqueB -> condicion .)
    RETURN          reduce using rule 33 (bloqueB -> condicion .)
    RCURLY          reduce using rule 33 (bloqueB -> condicion .)


state 54

    (34) bloqueB -> escribir .

    FOR             reduce using rule 34 (bloqueB -> escribir .)
    WHILE           reduce using rule 34 (bloqueB -> escribir .)
    IF              reduce using rule 34 (bloqueB -> escribir .)
    ESCRITURA       reduce using rule 34 (bloqueB -> escribir .)
    LECTURA         reduce using rule 34 (bloqueB -> escribir .)
    VAR             reduce using rule 34 (bloqueB -> escribir .)
    ID              reduce using rule 34 (bloqueB -> escribir .)
    RETURN          reduce using rule 34 (bloqueB -> escribir .)
    RCURLY          reduce using rule 34 (bloqueB -> escribir .)


state 55

    (35) bloqueB -> leer .

    FOR             reduce using rule 35 (bloqueB -> leer .)
    WHILE           reduce using rule 35 (bloqueB -> leer .)
    IF              reduce using rule 35 (bloqueB -> leer .)
    ESCRITURA       reduce using rule 35 (bloqueB -> leer .)
    LECTURA         reduce using rule 35 (bloqueB -> leer .)
    VAR             reduce using rule 35 (bloqueB -> leer .)
    ID              reduce using rule 35 (bloqueB -> leer .)
    RETURN          reduce using rule 35 (bloqueB -> leer .)
    RCURLY          reduce using rule 35 (bloqueB -> leer .)


state 56

    (36) bloqueB -> dec_vars .

    FOR             reduce using rule 36 (bloqueB -> dec_vars .)
    WHILE           reduce using rule 36 (bloqueB -> dec_vars .)
    IF              reduce using rule 36 (bloqueB -> dec_vars .)
    ESCRITURA       reduce using rule 36 (bloqueB -> dec_vars .)
    LECTURA         reduce using rule 36 (bloqueB -> dec_vars .)
    VAR             reduce using rule 36 (bloqueB -> dec_vars .)
    ID              reduce using rule 36 (bloqueB -> dec_vars .)
    RETURN          reduce using rule 36 (bloqueB -> dec_vars .)
    RCURLY          reduce using rule 36 (bloqueB -> dec_vars .)


state 57

    (37) bloqueB -> llam_func .

    FOR             reduce using rule 37 (bloqueB -> llam_func .)
    WHILE           reduce using rule 37 (bloqueB -> llam_func .)
    IF              reduce using rule 37 (bloqueB -> llam_func .)
    ESCRITURA       reduce using rule 37 (bloqueB -> llam_func .)
    LECTURA         reduce using rule 37 (bloqueB -> llam_func .)
    VAR             reduce using rule 37 (bloqueB -> llam_func .)
    ID              reduce using rule 37 (bloqueB -> llam_func .)
    RETURN          reduce using rule 37 (bloqueB -> llam_func .)
    RCURLY          reduce using rule 37 (bloqueB -> llam_func .)


state 58

    (38) bloqueB -> regresar .

    FOR             reduce using rule 38 (bloqueB -> regresar .)
    WHILE           reduce using rule 38 (bloqueB -> regresar .)
    IF              reduce using rule 38 (bloqueB -> regresar .)
    ESCRITURA       reduce using rule 38 (bloqueB -> regresar .)
    LECTURA         reduce using rule 38 (bloqueB -> regresar .)
    VAR             reduce using rule 38 (bloqueB -> regresar .)
    ID              reduce using rule 38 (bloqueB -> regresar .)
    RETURN          reduce using rule 38 (bloqueB -> regresar .)
    RCURLY          reduce using rule 38 (bloqueB -> regresar .)


state 59

    (41) asignacion -> llam_vars . ASSIGN expresion punto_codigoI_12

    ASSIGN          shift and go to state 78


state 60

    (82) ciclo_para_cada -> FOR . LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10

    LPAREN          shift and go to state 79


state 61

    (84) ciclo_mientras -> WHILE . punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (134) punto_codigoII_4 -> .

    LPAREN          reduce using rule 134 (punto_codigoII_4 -> .)

    punto_codigoII_4               shift and go to state 80

state 62

    (85) condicion -> IF . LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3

    LPAREN          shift and go to state 81


state 63

    (88) escribir -> ESCRITURA . LPAREN escribirB RPAREN

    LPAREN          shift and go to state 82


state 64

    (94) leer -> LECTURA . LPAREN leerB RPAREN

    LPAREN          shift and go to state 83


state 65

    (76) llam_func -> ID . LPAREN llam_params RPAREN
    (42) llam_vars -> ID . punto_codigoI_1 llam_varsB punto_arreglos_6
    (119) punto_codigoI_1 -> .

    LPAREN          shift and go to state 84
    LBRACE          reduce using rule 119 (punto_codigoI_1 -> .)
    ASSIGN          reduce using rule 119 (punto_codigoI_1 -> .)

    punto_codigoI_1                shift and go to state 85

state 66

    (98) regresar -> RETURN . LPAREN expresion RPAREN

    LPAREN          shift and go to state 86


state 67

    (24) dec_params -> ID . punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB
    (111) punto_semantico_11 -> .

    COLON           reduce using rule 111 (punto_semantico_11 -> .)

    punto_semantico_11             shift and go to state 87

state 68

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB . RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14

    RPAREN          shift and go to state 88


state 69

    (22) dec_funcB -> dec_params .

    RPAREN          reduce using rule 22 (dec_funcB -> dec_params .)


state 70

    (23) dec_funcB -> empty .

    RPAREN          reduce using rule 23 (dec_funcB -> empty .)


state 71

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 . dec_varsBB
    (15) dec_varsBB -> . dec_vars
    (16) dec_varsBB -> . empty
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (100) empty -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 10
    FUNCION         reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

  ! VAR             [ reduce using rule 100 (empty -> .) ]

    dec_varsBB                     shift and go to state 89
    dec_vars                       shift and go to state 90
    empty                          shift and go to state 91

state 72

    (11) dec_varsB -> LBRACE CTEENT . punto_semantico_6 RBRACE dec_varsB2
    (106) punto_semantico_6 -> .

    RBRACE          reduce using rule 106 (punto_semantico_6 -> .)

    punto_semantico_6              shift and go to state 92

state 73

    (9) dec_varsII -> COMMA ID punto_semantico_4 dec_varsII .

    COLON           reduce using rule 9 (dec_varsII -> COMMA ID punto_semantico_4 dec_varsII .)


state 74

    (99) inicio -> MAIN punto_semantico_15 LPAREN RPAREN LCURLY bloque RCURLY . punto_semantico_14
    (114) punto_semantico_14 -> .

    $end            reduce using rule 114 (punto_semantico_14 -> .)

    punto_semantico_14             shift and go to state 93

state 75

    (39) bloqueBB -> bloqueB . bloqueBB
    (39) bloqueBB -> . bloqueB bloqueBB
    (40) bloqueBB -> . empty
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (100) empty -> .
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    RCURLY          reduce using rule 100 (empty -> .)
    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloqueB                        shift and go to state 75
    bloqueBB                       shift and go to state 94
    empty                          shift and go to state 77
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 76

    (29) bloque -> bloqueB bloqueBB .

    RCURLY          reduce using rule 29 (bloque -> bloqueB bloqueBB .)


state 77

    (40) bloqueBB -> empty .

    RCURLY          reduce using rule 40 (bloqueBB -> empty .)


state 78

    (41) asignacion -> llam_vars ASSIGN . expresion punto_codigoI_12
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    llam_vars                      shift and go to state 95
    expresion                      shift and go to state 96
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 79

    (82) ciclo_para_cada -> FOR LPAREN . ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (83) ciclo_para_cadaB -> . VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8

    VAR             shift and go to state 113

    ciclo_para_cadaB               shift and go to state 112

state 80

    (84) ciclo_mientras -> WHILE punto_codigoII_4 . LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6

    LPAREN          shift and go to state 114


state 81

    (85) condicion -> IF LPAREN . expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 115
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 82

    (88) escribir -> ESCRITURA LPAREN . escribirB RPAREN
    (89) escribirB -> . expresion punto_codigoI_10 escribirBB
    (90) escribirB -> . CTEFRASE punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
    (91) escribirB -> . CTELETRA punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    CTEFRASE        shift and go to state 118
    CTELETRA        shift and go to state 119
    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    escribirB                      shift and go to state 116
    expresion                      shift and go to state 117
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 83

    (94) leer -> LECTURA LPAREN . leerB RPAREN
    (95) leerB -> . ID punto_codigoI_1 punto_codigoI_11 leerBB

    ID              shift and go to state 121

    leerB                          shift and go to state 120

state 84

    (76) llam_func -> ID LPAREN . llam_params RPAREN
    (79) llam_params -> . expresion llam_paramsB
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    llam_params                    shift and go to state 122
    expresion                      shift and go to state 123
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 85

    (42) llam_vars -> ID punto_codigoI_1 . llam_varsB punto_arreglos_6
    (43) llam_varsB -> . LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
    (44) llam_varsB -> . empty
    (100) empty -> .

    LBRACE          shift and go to state 125
    ASSIGN          reduce using rule 100 (empty -> .)
    TIMES           reduce using rule 100 (empty -> .)
    DIVIDE          reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    EQUAL           reduce using rule 100 (empty -> .)
    NEQUAL          reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACE          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    llam_varsB                     shift and go to state 124
    empty                          shift and go to state 126

state 86

    (98) regresar -> RETURN LPAREN . expresion RPAREN
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 127
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 87

    (24) dec_params -> ID punto_semantico_11 . COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB

    COLON           shift and go to state 128


state 88

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN . COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14

    COLON           shift and go to state 129


state 89

    (7) dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .

    FUNCION         reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    FOR             reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    WHILE           reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    IF              reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    ESCRITURA       reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    LECTURA         reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    VAR             reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    ID              reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    RETURN          reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)
    RCURLY          reduce using rule 7 (dec_vars -> VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB .)


state 90

    (15) dec_varsBB -> dec_vars .

    FUNCION         reduce using rule 15 (dec_varsBB -> dec_vars .)
    FOR             reduce using rule 15 (dec_varsBB -> dec_vars .)
    WHILE           reduce using rule 15 (dec_varsBB -> dec_vars .)
    IF              reduce using rule 15 (dec_varsBB -> dec_vars .)
    ESCRITURA       reduce using rule 15 (dec_varsBB -> dec_vars .)
    LECTURA         reduce using rule 15 (dec_varsBB -> dec_vars .)
    VAR             reduce using rule 15 (dec_varsBB -> dec_vars .)
    ID              reduce using rule 15 (dec_varsBB -> dec_vars .)
    RETURN          reduce using rule 15 (dec_varsBB -> dec_vars .)
    RCURLY          reduce using rule 15 (dec_varsBB -> dec_vars .)


state 91

    (16) dec_varsBB -> empty .

    FUNCION         reduce using rule 16 (dec_varsBB -> empty .)
    FOR             reduce using rule 16 (dec_varsBB -> empty .)
    WHILE           reduce using rule 16 (dec_varsBB -> empty .)
    IF              reduce using rule 16 (dec_varsBB -> empty .)
    ESCRITURA       reduce using rule 16 (dec_varsBB -> empty .)
    LECTURA         reduce using rule 16 (dec_varsBB -> empty .)
    VAR             reduce using rule 16 (dec_varsBB -> empty .)
    ID              reduce using rule 16 (dec_varsBB -> empty .)
    RETURN          reduce using rule 16 (dec_varsBB -> empty .)
    RCURLY          reduce using rule 16 (dec_varsBB -> empty .)


state 92

    (11) dec_varsB -> LBRACE CTEENT punto_semantico_6 . RBRACE dec_varsB2

    RBRACE          shift and go to state 130


state 93

    (99) inicio -> MAIN punto_semantico_15 LPAREN RPAREN LCURLY bloque RCURLY punto_semantico_14 .

    $end            reduce using rule 99 (inicio -> MAIN punto_semantico_15 LPAREN RPAREN LCURLY bloque RCURLY punto_semantico_14 .)


state 94

    (39) bloqueBB -> bloqueB bloqueBB .

    RCURLY          reduce using rule 39 (bloqueBB -> bloqueB bloqueBB .)


state 95

    (69) factor -> llam_vars .

    TIMES           reduce using rule 69 (factor -> llam_vars .)
    DIVIDE          reduce using rule 69 (factor -> llam_vars .)
    PLUS            reduce using rule 69 (factor -> llam_vars .)
    MINUS           reduce using rule 69 (factor -> llam_vars .)
    LT              reduce using rule 69 (factor -> llam_vars .)
    GT              reduce using rule 69 (factor -> llam_vars .)
    LTE             reduce using rule 69 (factor -> llam_vars .)
    GTE             reduce using rule 69 (factor -> llam_vars .)
    EQUAL           reduce using rule 69 (factor -> llam_vars .)
    NEQUAL          reduce using rule 69 (factor -> llam_vars .)
    AND             reduce using rule 69 (factor -> llam_vars .)
    OR              reduce using rule 69 (factor -> llam_vars .)
    FOR             reduce using rule 69 (factor -> llam_vars .)
    WHILE           reduce using rule 69 (factor -> llam_vars .)
    IF              reduce using rule 69 (factor -> llam_vars .)
    ESCRITURA       reduce using rule 69 (factor -> llam_vars .)
    LECTURA         reduce using rule 69 (factor -> llam_vars .)
    VAR             reduce using rule 69 (factor -> llam_vars .)
    ID              reduce using rule 69 (factor -> llam_vars .)
    RETURN          reduce using rule 69 (factor -> llam_vars .)
    RCURLY          reduce using rule 69 (factor -> llam_vars .)
    RPAREN          reduce using rule 69 (factor -> llam_vars .)
    COMMA           reduce using rule 69 (factor -> llam_vars .)
    RBRACE          reduce using rule 69 (factor -> llam_vars .)
    TO              reduce using rule 69 (factor -> llam_vars .)


state 96

    (41) asignacion -> llam_vars ASSIGN expresion . punto_codigoI_12
    (130) punto_codigoI_12 -> .

    FOR             reduce using rule 130 (punto_codigoI_12 -> .)
    WHILE           reduce using rule 130 (punto_codigoI_12 -> .)
    IF              reduce using rule 130 (punto_codigoI_12 -> .)
    ESCRITURA       reduce using rule 130 (punto_codigoI_12 -> .)
    LECTURA         reduce using rule 130 (punto_codigoI_12 -> .)
    VAR             reduce using rule 130 (punto_codigoI_12 -> .)
    ID              reduce using rule 130 (punto_codigoI_12 -> .)
    RETURN          reduce using rule 130 (punto_codigoI_12 -> .)
    RCURLY          reduce using rule 130 (punto_codigoI_12 -> .)

    punto_codigoI_12               shift and go to state 131

state 97

    (47) expresion -> peta_exp .

    FOR             reduce using rule 47 (expresion -> peta_exp .)
    WHILE           reduce using rule 47 (expresion -> peta_exp .)
    IF              reduce using rule 47 (expresion -> peta_exp .)
    ESCRITURA       reduce using rule 47 (expresion -> peta_exp .)
    LECTURA         reduce using rule 47 (expresion -> peta_exp .)
    VAR             reduce using rule 47 (expresion -> peta_exp .)
    ID              reduce using rule 47 (expresion -> peta_exp .)
    RETURN          reduce using rule 47 (expresion -> peta_exp .)
    RCURLY          reduce using rule 47 (expresion -> peta_exp .)
    RPAREN          reduce using rule 47 (expresion -> peta_exp .)
    COMMA           reduce using rule 47 (expresion -> peta_exp .)
    RBRACE          reduce using rule 47 (expresion -> peta_exp .)
    TO              reduce using rule 47 (expresion -> peta_exp .)


state 98

    (48) peta_exp -> tera_exp . punto_codigoI_4 peta_expB
    (122) punto_codigoI_4 -> .

    AND             reduce using rule 122 (punto_codigoI_4 -> .)
    OR              reduce using rule 122 (punto_codigoI_4 -> .)
    FOR             reduce using rule 122 (punto_codigoI_4 -> .)
    WHILE           reduce using rule 122 (punto_codigoI_4 -> .)
    IF              reduce using rule 122 (punto_codigoI_4 -> .)
    ESCRITURA       reduce using rule 122 (punto_codigoI_4 -> .)
    LECTURA         reduce using rule 122 (punto_codigoI_4 -> .)
    VAR             reduce using rule 122 (punto_codigoI_4 -> .)
    ID              reduce using rule 122 (punto_codigoI_4 -> .)
    RETURN          reduce using rule 122 (punto_codigoI_4 -> .)
    RCURLY          reduce using rule 122 (punto_codigoI_4 -> .)
    RPAREN          reduce using rule 122 (punto_codigoI_4 -> .)
    COMMA           reduce using rule 122 (punto_codigoI_4 -> .)
    RBRACE          reduce using rule 122 (punto_codigoI_4 -> .)
    TO              reduce using rule 122 (punto_codigoI_4 -> .)

    punto_codigoI_4                shift and go to state 132

state 99

    (52) tera_exp -> mega_exp . punto_codigoI_5 tera_expB
    (123) punto_codigoI_5 -> .

    LT              reduce using rule 123 (punto_codigoI_5 -> .)
    GT              reduce using rule 123 (punto_codigoI_5 -> .)
    LTE             reduce using rule 123 (punto_codigoI_5 -> .)
    GTE             reduce using rule 123 (punto_codigoI_5 -> .)
    EQUAL           reduce using rule 123 (punto_codigoI_5 -> .)
    NEQUAL          reduce using rule 123 (punto_codigoI_5 -> .)
    AND             reduce using rule 123 (punto_codigoI_5 -> .)
    OR              reduce using rule 123 (punto_codigoI_5 -> .)
    FOR             reduce using rule 123 (punto_codigoI_5 -> .)
    WHILE           reduce using rule 123 (punto_codigoI_5 -> .)
    IF              reduce using rule 123 (punto_codigoI_5 -> .)
    ESCRITURA       reduce using rule 123 (punto_codigoI_5 -> .)
    LECTURA         reduce using rule 123 (punto_codigoI_5 -> .)
    VAR             reduce using rule 123 (punto_codigoI_5 -> .)
    ID              reduce using rule 123 (punto_codigoI_5 -> .)
    RETURN          reduce using rule 123 (punto_codigoI_5 -> .)
    RCURLY          reduce using rule 123 (punto_codigoI_5 -> .)
    RPAREN          reduce using rule 123 (punto_codigoI_5 -> .)
    COMMA           reduce using rule 123 (punto_codigoI_5 -> .)
    RBRACE          reduce using rule 123 (punto_codigoI_5 -> .)
    TO              reduce using rule 123 (punto_codigoI_5 -> .)

    punto_codigoI_5                shift and go to state 133

state 100

    (60) mega_exp -> kilo_exp . punto_codigoI_6 mega_expB
    (124) punto_codigoI_6 -> .

    PLUS            reduce using rule 124 (punto_codigoI_6 -> .)
    MINUS           reduce using rule 124 (punto_codigoI_6 -> .)
    LT              reduce using rule 124 (punto_codigoI_6 -> .)
    GT              reduce using rule 124 (punto_codigoI_6 -> .)
    LTE             reduce using rule 124 (punto_codigoI_6 -> .)
    GTE             reduce using rule 124 (punto_codigoI_6 -> .)
    EQUAL           reduce using rule 124 (punto_codigoI_6 -> .)
    NEQUAL          reduce using rule 124 (punto_codigoI_6 -> .)
    AND             reduce using rule 124 (punto_codigoI_6 -> .)
    OR              reduce using rule 124 (punto_codigoI_6 -> .)
    FOR             reduce using rule 124 (punto_codigoI_6 -> .)
    WHILE           reduce using rule 124 (punto_codigoI_6 -> .)
    IF              reduce using rule 124 (punto_codigoI_6 -> .)
    ESCRITURA       reduce using rule 124 (punto_codigoI_6 -> .)
    LECTURA         reduce using rule 124 (punto_codigoI_6 -> .)
    VAR             reduce using rule 124 (punto_codigoI_6 -> .)
    ID              reduce using rule 124 (punto_codigoI_6 -> .)
    RETURN          reduce using rule 124 (punto_codigoI_6 -> .)
    RCURLY          reduce using rule 124 (punto_codigoI_6 -> .)
    RPAREN          reduce using rule 124 (punto_codigoI_6 -> .)
    COMMA           reduce using rule 124 (punto_codigoI_6 -> .)
    RBRACE          reduce using rule 124 (punto_codigoI_6 -> .)
    TO              reduce using rule 124 (punto_codigoI_6 -> .)

    punto_codigoI_6                shift and go to state 134

state 101

    (64) kilo_exp -> factor . punto_codigoI_7 kilo_expB
    (125) punto_codigoI_7 -> .

    TIMES           reduce using rule 125 (punto_codigoI_7 -> .)
    DIVIDE          reduce using rule 125 (punto_codigoI_7 -> .)
    PLUS            reduce using rule 125 (punto_codigoI_7 -> .)
    MINUS           reduce using rule 125 (punto_codigoI_7 -> .)
    LT              reduce using rule 125 (punto_codigoI_7 -> .)
    GT              reduce using rule 125 (punto_codigoI_7 -> .)
    LTE             reduce using rule 125 (punto_codigoI_7 -> .)
    GTE             reduce using rule 125 (punto_codigoI_7 -> .)
    EQUAL           reduce using rule 125 (punto_codigoI_7 -> .)
    NEQUAL          reduce using rule 125 (punto_codigoI_7 -> .)
    AND             reduce using rule 125 (punto_codigoI_7 -> .)
    OR              reduce using rule 125 (punto_codigoI_7 -> .)
    FOR             reduce using rule 125 (punto_codigoI_7 -> .)
    WHILE           reduce using rule 125 (punto_codigoI_7 -> .)
    IF              reduce using rule 125 (punto_codigoI_7 -> .)
    ESCRITURA       reduce using rule 125 (punto_codigoI_7 -> .)
    LECTURA         reduce using rule 125 (punto_codigoI_7 -> .)
    VAR             reduce using rule 125 (punto_codigoI_7 -> .)
    ID              reduce using rule 125 (punto_codigoI_7 -> .)
    RETURN          reduce using rule 125 (punto_codigoI_7 -> .)
    RCURLY          reduce using rule 125 (punto_codigoI_7 -> .)
    RPAREN          reduce using rule 125 (punto_codigoI_7 -> .)
    COMMA           reduce using rule 125 (punto_codigoI_7 -> .)
    RBRACE          reduce using rule 125 (punto_codigoI_7 -> .)
    TO              reduce using rule 125 (punto_codigoI_7 -> .)

    punto_codigoI_7                shift and go to state 135

state 102

    (68) factor -> LPAREN . punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (126) punto_codigoI_8 -> .

    LPAREN          reduce using rule 126 (punto_codigoI_8 -> .)
    CTEENT          reduce using rule 126 (punto_codigoI_8 -> .)
    CTEDECI         reduce using rule 126 (punto_codigoI_8 -> .)
    CTELETRA        reduce using rule 126 (punto_codigoI_8 -> .)
    CTEFRASE        reduce using rule 126 (punto_codigoI_8 -> .)
    ID              reduce using rule 126 (punto_codigoI_8 -> .)
    TRUE            reduce using rule 126 (punto_codigoI_8 -> .)
    FALSE           reduce using rule 126 (punto_codigoI_8 -> .)

    punto_codigoI_8                shift and go to state 136

state 103

    (70) factor -> llam_func .

    TIMES           reduce using rule 70 (factor -> llam_func .)
    DIVIDE          reduce using rule 70 (factor -> llam_func .)
    PLUS            reduce using rule 70 (factor -> llam_func .)
    MINUS           reduce using rule 70 (factor -> llam_func .)
    LT              reduce using rule 70 (factor -> llam_func .)
    GT              reduce using rule 70 (factor -> llam_func .)
    LTE             reduce using rule 70 (factor -> llam_func .)
    GTE             reduce using rule 70 (factor -> llam_func .)
    EQUAL           reduce using rule 70 (factor -> llam_func .)
    NEQUAL          reduce using rule 70 (factor -> llam_func .)
    AND             reduce using rule 70 (factor -> llam_func .)
    OR              reduce using rule 70 (factor -> llam_func .)
    FOR             reduce using rule 70 (factor -> llam_func .)
    WHILE           reduce using rule 70 (factor -> llam_func .)
    IF              reduce using rule 70 (factor -> llam_func .)
    ESCRITURA       reduce using rule 70 (factor -> llam_func .)
    LECTURA         reduce using rule 70 (factor -> llam_func .)
    VAR             reduce using rule 70 (factor -> llam_func .)
    ID              reduce using rule 70 (factor -> llam_func .)
    RETURN          reduce using rule 70 (factor -> llam_func .)
    RCURLY          reduce using rule 70 (factor -> llam_func .)
    RPAREN          reduce using rule 70 (factor -> llam_func .)
    COMMA           reduce using rule 70 (factor -> llam_func .)
    RBRACE          reduce using rule 70 (factor -> llam_func .)
    TO              reduce using rule 70 (factor -> llam_func .)


state 104

    (71) factor -> CTEENT . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)
    FOR             reduce using rule 117 (punto_semantico_17 -> .)
    WHILE           reduce using rule 117 (punto_semantico_17 -> .)
    IF              reduce using rule 117 (punto_semantico_17 -> .)
    ESCRITURA       reduce using rule 117 (punto_semantico_17 -> .)
    LECTURA         reduce using rule 117 (punto_semantico_17 -> .)
    VAR             reduce using rule 117 (punto_semantico_17 -> .)
    ID              reduce using rule 117 (punto_semantico_17 -> .)
    RETURN          reduce using rule 117 (punto_semantico_17 -> .)
    RCURLY          reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RBRACE          reduce using rule 117 (punto_semantico_17 -> .)
    TO              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 137

state 105

    (72) factor -> CTEDECI . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)
    FOR             reduce using rule 117 (punto_semantico_17 -> .)
    WHILE           reduce using rule 117 (punto_semantico_17 -> .)
    IF              reduce using rule 117 (punto_semantico_17 -> .)
    ESCRITURA       reduce using rule 117 (punto_semantico_17 -> .)
    LECTURA         reduce using rule 117 (punto_semantico_17 -> .)
    VAR             reduce using rule 117 (punto_semantico_17 -> .)
    ID              reduce using rule 117 (punto_semantico_17 -> .)
    RETURN          reduce using rule 117 (punto_semantico_17 -> .)
    RCURLY          reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RBRACE          reduce using rule 117 (punto_semantico_17 -> .)
    TO              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 138

state 106

    (73) factor -> cte_bool . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)
    FOR             reduce using rule 117 (punto_semantico_17 -> .)
    WHILE           reduce using rule 117 (punto_semantico_17 -> .)
    IF              reduce using rule 117 (punto_semantico_17 -> .)
    ESCRITURA       reduce using rule 117 (punto_semantico_17 -> .)
    LECTURA         reduce using rule 117 (punto_semantico_17 -> .)
    VAR             reduce using rule 117 (punto_semantico_17 -> .)
    ID              reduce using rule 117 (punto_semantico_17 -> .)
    RETURN          reduce using rule 117 (punto_semantico_17 -> .)
    RCURLY          reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RBRACE          reduce using rule 117 (punto_semantico_17 -> .)
    TO              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 139

state 107

    (74) factor -> CTELETRA . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)
    FOR             reduce using rule 117 (punto_semantico_17 -> .)
    WHILE           reduce using rule 117 (punto_semantico_17 -> .)
    IF              reduce using rule 117 (punto_semantico_17 -> .)
    ESCRITURA       reduce using rule 117 (punto_semantico_17 -> .)
    LECTURA         reduce using rule 117 (punto_semantico_17 -> .)
    VAR             reduce using rule 117 (punto_semantico_17 -> .)
    ID              reduce using rule 117 (punto_semantico_17 -> .)
    RETURN          reduce using rule 117 (punto_semantico_17 -> .)
    RCURLY          reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RBRACE          reduce using rule 117 (punto_semantico_17 -> .)
    TO              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 140

state 108

    (75) factor -> CTEFRASE . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)
    FOR             reduce using rule 117 (punto_semantico_17 -> .)
    WHILE           reduce using rule 117 (punto_semantico_17 -> .)
    IF              reduce using rule 117 (punto_semantico_17 -> .)
    ESCRITURA       reduce using rule 117 (punto_semantico_17 -> .)
    LECTURA         reduce using rule 117 (punto_semantico_17 -> .)
    VAR             reduce using rule 117 (punto_semantico_17 -> .)
    ID              reduce using rule 117 (punto_semantico_17 -> .)
    RETURN          reduce using rule 117 (punto_semantico_17 -> .)
    RCURLY          reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RBRACE          reduce using rule 117 (punto_semantico_17 -> .)
    TO              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 141

state 109

    (42) llam_vars -> ID . punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> ID . LPAREN llam_params RPAREN
    (119) punto_codigoI_1 -> .

    LPAREN          shift and go to state 84
    LBRACE          reduce using rule 119 (punto_codigoI_1 -> .)
    TIMES           reduce using rule 119 (punto_codigoI_1 -> .)
    DIVIDE          reduce using rule 119 (punto_codigoI_1 -> .)
    PLUS            reduce using rule 119 (punto_codigoI_1 -> .)
    MINUS           reduce using rule 119 (punto_codigoI_1 -> .)
    LT              reduce using rule 119 (punto_codigoI_1 -> .)
    GT              reduce using rule 119 (punto_codigoI_1 -> .)
    LTE             reduce using rule 119 (punto_codigoI_1 -> .)
    GTE             reduce using rule 119 (punto_codigoI_1 -> .)
    EQUAL           reduce using rule 119 (punto_codigoI_1 -> .)
    NEQUAL          reduce using rule 119 (punto_codigoI_1 -> .)
    AND             reduce using rule 119 (punto_codigoI_1 -> .)
    OR              reduce using rule 119 (punto_codigoI_1 -> .)
    FOR             reduce using rule 119 (punto_codigoI_1 -> .)
    WHILE           reduce using rule 119 (punto_codigoI_1 -> .)
    IF              reduce using rule 119 (punto_codigoI_1 -> .)
    ESCRITURA       reduce using rule 119 (punto_codigoI_1 -> .)
    LECTURA         reduce using rule 119 (punto_codigoI_1 -> .)
    VAR             reduce using rule 119 (punto_codigoI_1 -> .)
    ID              reduce using rule 119 (punto_codigoI_1 -> .)
    RETURN          reduce using rule 119 (punto_codigoI_1 -> .)
    RCURLY          reduce using rule 119 (punto_codigoI_1 -> .)
    RPAREN          reduce using rule 119 (punto_codigoI_1 -> .)
    COMMA           reduce using rule 119 (punto_codigoI_1 -> .)
    RBRACE          reduce using rule 119 (punto_codigoI_1 -> .)
    TO              reduce using rule 119 (punto_codigoI_1 -> .)

    punto_codigoI_1                shift and go to state 85

state 110

    (77) cte_bool -> TRUE .

    TIMES           reduce using rule 77 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 77 (cte_bool -> TRUE .)
    PLUS            reduce using rule 77 (cte_bool -> TRUE .)
    MINUS           reduce using rule 77 (cte_bool -> TRUE .)
    LT              reduce using rule 77 (cte_bool -> TRUE .)
    GT              reduce using rule 77 (cte_bool -> TRUE .)
    LTE             reduce using rule 77 (cte_bool -> TRUE .)
    GTE             reduce using rule 77 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 77 (cte_bool -> TRUE .)
    NEQUAL          reduce using rule 77 (cte_bool -> TRUE .)
    AND             reduce using rule 77 (cte_bool -> TRUE .)
    OR              reduce using rule 77 (cte_bool -> TRUE .)
    FOR             reduce using rule 77 (cte_bool -> TRUE .)
    WHILE           reduce using rule 77 (cte_bool -> TRUE .)
    IF              reduce using rule 77 (cte_bool -> TRUE .)
    ESCRITURA       reduce using rule 77 (cte_bool -> TRUE .)
    LECTURA         reduce using rule 77 (cte_bool -> TRUE .)
    VAR             reduce using rule 77 (cte_bool -> TRUE .)
    ID              reduce using rule 77 (cte_bool -> TRUE .)
    RETURN          reduce using rule 77 (cte_bool -> TRUE .)
    RCURLY          reduce using rule 77 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 77 (cte_bool -> TRUE .)
    COMMA           reduce using rule 77 (cte_bool -> TRUE .)
    RBRACE          reduce using rule 77 (cte_bool -> TRUE .)
    TO              reduce using rule 77 (cte_bool -> TRUE .)


state 111

    (78) cte_bool -> FALSE .

    TIMES           reduce using rule 78 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 78 (cte_bool -> FALSE .)
    PLUS            reduce using rule 78 (cte_bool -> FALSE .)
    MINUS           reduce using rule 78 (cte_bool -> FALSE .)
    LT              reduce using rule 78 (cte_bool -> FALSE .)
    GT              reduce using rule 78 (cte_bool -> FALSE .)
    LTE             reduce using rule 78 (cte_bool -> FALSE .)
    GTE             reduce using rule 78 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 78 (cte_bool -> FALSE .)
    NEQUAL          reduce using rule 78 (cte_bool -> FALSE .)
    AND             reduce using rule 78 (cte_bool -> FALSE .)
    OR              reduce using rule 78 (cte_bool -> FALSE .)
    FOR             reduce using rule 78 (cte_bool -> FALSE .)
    WHILE           reduce using rule 78 (cte_bool -> FALSE .)
    IF              reduce using rule 78 (cte_bool -> FALSE .)
    ESCRITURA       reduce using rule 78 (cte_bool -> FALSE .)
    LECTURA         reduce using rule 78 (cte_bool -> FALSE .)
    VAR             reduce using rule 78 (cte_bool -> FALSE .)
    ID              reduce using rule 78 (cte_bool -> FALSE .)
    RETURN          reduce using rule 78 (cte_bool -> FALSE .)
    RCURLY          reduce using rule 78 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 78 (cte_bool -> FALSE .)
    COMMA           reduce using rule 78 (cte_bool -> FALSE .)
    RBRACE          reduce using rule 78 (cte_bool -> FALSE .)
    TO              reduce using rule 78 (cte_bool -> FALSE .)


state 112

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB . TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10

    TO              shift and go to state 142


state 113

    (83) ciclo_para_cadaB -> VAR . punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8
    (103) punto_semantico_3 -> .

    ID              reduce using rule 103 (punto_semantico_3 -> .)

    punto_semantico_3              shift and go to state 143

state 114

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN . expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 144
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 115

    (85) condicion -> IF LPAREN expresion . punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (131) punto_codigoII_1 -> .

    RPAREN          reduce using rule 131 (punto_codigoII_1 -> .)

    punto_codigoII_1               shift and go to state 145

state 116

    (88) escribir -> ESCRITURA LPAREN escribirB . RPAREN

    RPAREN          shift and go to state 146


state 117

    (89) escribirB -> expresion . punto_codigoI_10 escribirBB
    (128) punto_codigoI_10 -> .

    COMMA           reduce using rule 128 (punto_codigoI_10 -> .)
    RPAREN          reduce using rule 128 (punto_codigoI_10 -> .)

    punto_codigoI_10               shift and go to state 147

state 118

    (90) escribirB -> CTEFRASE . punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
    (75) factor -> CTEFRASE . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 148

state 119

    (91) escribirB -> CTELETRA . punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
    (74) factor -> CTELETRA . punto_semantico_17 punto_codigoI_2
    (117) punto_semantico_17 -> .

    COMMA           reduce using rule 117 (punto_semantico_17 -> .)
    RPAREN          reduce using rule 117 (punto_semantico_17 -> .)
    TIMES           reduce using rule 117 (punto_semantico_17 -> .)
    DIVIDE          reduce using rule 117 (punto_semantico_17 -> .)
    PLUS            reduce using rule 117 (punto_semantico_17 -> .)
    MINUS           reduce using rule 117 (punto_semantico_17 -> .)
    LT              reduce using rule 117 (punto_semantico_17 -> .)
    GT              reduce using rule 117 (punto_semantico_17 -> .)
    LTE             reduce using rule 117 (punto_semantico_17 -> .)
    GTE             reduce using rule 117 (punto_semantico_17 -> .)
    EQUAL           reduce using rule 117 (punto_semantico_17 -> .)
    NEQUAL          reduce using rule 117 (punto_semantico_17 -> .)
    AND             reduce using rule 117 (punto_semantico_17 -> .)
    OR              reduce using rule 117 (punto_semantico_17 -> .)

    punto_semantico_17             shift and go to state 149

state 120

    (94) leer -> LECTURA LPAREN leerB . RPAREN

    RPAREN          shift and go to state 150


state 121

    (95) leerB -> ID . punto_codigoI_1 punto_codigoI_11 leerBB
    (119) punto_codigoI_1 -> .

    COMMA           reduce using rule 119 (punto_codigoI_1 -> .)
    RPAREN          reduce using rule 119 (punto_codigoI_1 -> .)

    punto_codigoI_1                shift and go to state 151

state 122

    (76) llam_func -> ID LPAREN llam_params . RPAREN

    RPAREN          shift and go to state 152


state 123

    (79) llam_params -> expresion . llam_paramsB
    (80) llam_paramsB -> . COMMA llam_params
    (81) llam_paramsB -> . empty
    (100) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 100 (empty -> .)

    llam_paramsB                   shift and go to state 153
    empty                          shift and go to state 155

state 124

    (42) llam_vars -> ID punto_codigoI_1 llam_varsB . punto_arreglos_6
    (146) punto_arreglos_6 -> .

    ASSIGN          reduce using rule 146 (punto_arreglos_6 -> .)
    TIMES           reduce using rule 146 (punto_arreglos_6 -> .)
    DIVIDE          reduce using rule 146 (punto_arreglos_6 -> .)
    PLUS            reduce using rule 146 (punto_arreglos_6 -> .)
    MINUS           reduce using rule 146 (punto_arreglos_6 -> .)
    LT              reduce using rule 146 (punto_arreglos_6 -> .)
    GT              reduce using rule 146 (punto_arreglos_6 -> .)
    LTE             reduce using rule 146 (punto_arreglos_6 -> .)
    GTE             reduce using rule 146 (punto_arreglos_6 -> .)
    EQUAL           reduce using rule 146 (punto_arreglos_6 -> .)
    NEQUAL          reduce using rule 146 (punto_arreglos_6 -> .)
    AND             reduce using rule 146 (punto_arreglos_6 -> .)
    OR              reduce using rule 146 (punto_arreglos_6 -> .)
    FOR             reduce using rule 146 (punto_arreglos_6 -> .)
    WHILE           reduce using rule 146 (punto_arreglos_6 -> .)
    IF              reduce using rule 146 (punto_arreglos_6 -> .)
    ESCRITURA       reduce using rule 146 (punto_arreglos_6 -> .)
    LECTURA         reduce using rule 146 (punto_arreglos_6 -> .)
    VAR             reduce using rule 146 (punto_arreglos_6 -> .)
    ID              reduce using rule 146 (punto_arreglos_6 -> .)
    RETURN          reduce using rule 146 (punto_arreglos_6 -> .)
    RCURLY          reduce using rule 146 (punto_arreglos_6 -> .)
    RPAREN          reduce using rule 146 (punto_arreglos_6 -> .)
    COMMA           reduce using rule 146 (punto_arreglos_6 -> .)
    RBRACE          reduce using rule 146 (punto_arreglos_6 -> .)
    TO              reduce using rule 146 (punto_arreglos_6 -> .)

    punto_arreglos_6               shift and go to state 156

state 125

    (43) llam_varsB -> LBRACE . punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
    (141) punto_arreglos_1 -> .

    LPAREN          reduce using rule 141 (punto_arreglos_1 -> .)
    CTEENT          reduce using rule 141 (punto_arreglos_1 -> .)
    CTEDECI         reduce using rule 141 (punto_arreglos_1 -> .)
    CTELETRA        reduce using rule 141 (punto_arreglos_1 -> .)
    CTEFRASE        reduce using rule 141 (punto_arreglos_1 -> .)
    ID              reduce using rule 141 (punto_arreglos_1 -> .)
    TRUE            reduce using rule 141 (punto_arreglos_1 -> .)
    FALSE           reduce using rule 141 (punto_arreglos_1 -> .)

    punto_arreglos_1               shift and go to state 157

state 126

    (44) llam_varsB -> empty .

    ASSIGN          reduce using rule 44 (llam_varsB -> empty .)
    TIMES           reduce using rule 44 (llam_varsB -> empty .)
    DIVIDE          reduce using rule 44 (llam_varsB -> empty .)
    PLUS            reduce using rule 44 (llam_varsB -> empty .)
    MINUS           reduce using rule 44 (llam_varsB -> empty .)
    LT              reduce using rule 44 (llam_varsB -> empty .)
    GT              reduce using rule 44 (llam_varsB -> empty .)
    LTE             reduce using rule 44 (llam_varsB -> empty .)
    GTE             reduce using rule 44 (llam_varsB -> empty .)
    EQUAL           reduce using rule 44 (llam_varsB -> empty .)
    NEQUAL          reduce using rule 44 (llam_varsB -> empty .)
    AND             reduce using rule 44 (llam_varsB -> empty .)
    OR              reduce using rule 44 (llam_varsB -> empty .)
    FOR             reduce using rule 44 (llam_varsB -> empty .)
    WHILE           reduce using rule 44 (llam_varsB -> empty .)
    IF              reduce using rule 44 (llam_varsB -> empty .)
    ESCRITURA       reduce using rule 44 (llam_varsB -> empty .)
    LECTURA         reduce using rule 44 (llam_varsB -> empty .)
    VAR             reduce using rule 44 (llam_varsB -> empty .)
    ID              reduce using rule 44 (llam_varsB -> empty .)
    RETURN          reduce using rule 44 (llam_varsB -> empty .)
    RCURLY          reduce using rule 44 (llam_varsB -> empty .)
    RPAREN          reduce using rule 44 (llam_varsB -> empty .)
    COMMA           reduce using rule 44 (llam_varsB -> empty .)
    RBRACE          reduce using rule 44 (llam_varsB -> empty .)
    TO              reduce using rule 44 (llam_varsB -> empty .)


state 127

    (98) regresar -> RETURN LPAREN expresion . RPAREN

    RPAREN          shift and go to state 158


state 128

    (24) dec_params -> ID punto_semantico_11 COLON . tipo punto_semantico_5 punto_semantico_12 dec_paramsB
    (17) tipo -> . TIPOENT
    (18) tipo -> . TIPODEC
    (19) tipo -> . TIPOLETRA
    (20) tipo -> . TIPOLOGI

    TIPOENT         shift and go to state 31
    TIPODEC         shift and go to state 32
    TIPOLETRA       shift and go to state 33
    TIPOLOGI        shift and go to state 34

    tipo                           shift and go to state 159

state 129

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON . tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
    (27) tipo_func -> . tipo
    (28) tipo_func -> . VOID
    (17) tipo -> . TIPOENT
    (18) tipo -> . TIPODEC
    (19) tipo -> . TIPOLETRA
    (20) tipo -> . TIPOLOGI

    VOID            shift and go to state 162
    TIPOENT         shift and go to state 31
    TIPODEC         shift and go to state 32
    TIPOLETRA       shift and go to state 33
    TIPOLOGI        shift and go to state 34

    tipo_func                      shift and go to state 160
    tipo                           shift and go to state 161

state 130

    (11) dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE . dec_varsB2
    (13) dec_varsB2 -> . LBRACE CTEENT punto_semantico_7 RBRACE
    (14) dec_varsB2 -> . empty
    (100) empty -> .

    LBRACE          shift and go to state 163
    VAR             reduce using rule 100 (empty -> .)
    FUNCION         reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

    dec_varsB2                     shift and go to state 164
    empty                          shift and go to state 165

state 131

    (41) asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .

    FOR             reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    WHILE           reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    IF              reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    ESCRITURA       reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    LECTURA         reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    VAR             reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    ID              reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    RETURN          reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)
    RCURLY          reduce using rule 41 (asignacion -> llam_vars ASSIGN expresion punto_codigoI_12 .)


state 132

    (48) peta_exp -> tera_exp punto_codigoI_4 . peta_expB
    (49) peta_expB -> . AND punto_codigoI_3 peta_exp
    (50) peta_expB -> . OR punto_codigoI_3 peta_exp
    (51) peta_expB -> . empty
    (100) empty -> .

    AND             shift and go to state 167
    OR              shift and go to state 168
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACE          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    peta_expB                      shift and go to state 166
    empty                          shift and go to state 169

state 133

    (52) tera_exp -> mega_exp punto_codigoI_5 . tera_expB
    (53) tera_expB -> . LT punto_codigoI_3 tera_exp
    (54) tera_expB -> . GT punto_codigoI_3 tera_exp
    (55) tera_expB -> . LTE punto_codigoI_3 tera_exp
    (56) tera_expB -> . GTE punto_codigoI_3 tera_exp
    (57) tera_expB -> . EQUAL punto_codigoI_3 tera_exp
    (58) tera_expB -> . NEQUAL punto_codigoI_3 tera_exp
    (59) tera_expB -> . empty
    (100) empty -> .

    LT              shift and go to state 171
    GT              shift and go to state 172
    LTE             shift and go to state 173
    GTE             shift and go to state 174
    EQUAL           shift and go to state 175
    NEQUAL          shift and go to state 176
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACE          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    tera_expB                      shift and go to state 170
    empty                          shift and go to state 177

state 134

    (60) mega_exp -> kilo_exp punto_codigoI_6 . mega_expB
    (61) mega_expB -> . PLUS punto_codigoI_3 mega_exp
    (62) mega_expB -> . MINUS punto_codigoI_3 mega_exp
    (63) mega_expB -> . empty
    (100) empty -> .

    PLUS            shift and go to state 179
    MINUS           shift and go to state 180
    LT              reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    EQUAL           reduce using rule 100 (empty -> .)
    NEQUAL          reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACE          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    mega_expB                      shift and go to state 178
    empty                          shift and go to state 181

state 135

    (64) kilo_exp -> factor punto_codigoI_7 . kilo_expB
    (65) kilo_expB -> . TIMES punto_codigoI_3 kilo_exp
    (66) kilo_expB -> . DIVIDE punto_codigoI_3 kilo_exp
    (67) kilo_expB -> . empty
    (100) empty -> .

    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 184
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    EQUAL           reduce using rule 100 (empty -> .)
    NEQUAL          reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACE          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    kilo_expB                      shift and go to state 182
    empty                          shift and go to state 185

state 136

    (68) factor -> LPAREN punto_codigoI_8 . expresion RPAREN punto_codigoI_9
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 186
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 137

    (71) factor -> CTEENT punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)
    FOR             reduce using rule 120 (punto_codigoI_2 -> .)
    WHILE           reduce using rule 120 (punto_codigoI_2 -> .)
    IF              reduce using rule 120 (punto_codigoI_2 -> .)
    ESCRITURA       reduce using rule 120 (punto_codigoI_2 -> .)
    LECTURA         reduce using rule 120 (punto_codigoI_2 -> .)
    VAR             reduce using rule 120 (punto_codigoI_2 -> .)
    ID              reduce using rule 120 (punto_codigoI_2 -> .)
    RETURN          reduce using rule 120 (punto_codigoI_2 -> .)
    RCURLY          reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RBRACE          reduce using rule 120 (punto_codigoI_2 -> .)
    TO              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 187

state 138

    (72) factor -> CTEDECI punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)
    FOR             reduce using rule 120 (punto_codigoI_2 -> .)
    WHILE           reduce using rule 120 (punto_codigoI_2 -> .)
    IF              reduce using rule 120 (punto_codigoI_2 -> .)
    ESCRITURA       reduce using rule 120 (punto_codigoI_2 -> .)
    LECTURA         reduce using rule 120 (punto_codigoI_2 -> .)
    VAR             reduce using rule 120 (punto_codigoI_2 -> .)
    ID              reduce using rule 120 (punto_codigoI_2 -> .)
    RETURN          reduce using rule 120 (punto_codigoI_2 -> .)
    RCURLY          reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RBRACE          reduce using rule 120 (punto_codigoI_2 -> .)
    TO              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 188

state 139

    (73) factor -> cte_bool punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)
    FOR             reduce using rule 120 (punto_codigoI_2 -> .)
    WHILE           reduce using rule 120 (punto_codigoI_2 -> .)
    IF              reduce using rule 120 (punto_codigoI_2 -> .)
    ESCRITURA       reduce using rule 120 (punto_codigoI_2 -> .)
    LECTURA         reduce using rule 120 (punto_codigoI_2 -> .)
    VAR             reduce using rule 120 (punto_codigoI_2 -> .)
    ID              reduce using rule 120 (punto_codigoI_2 -> .)
    RETURN          reduce using rule 120 (punto_codigoI_2 -> .)
    RCURLY          reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RBRACE          reduce using rule 120 (punto_codigoI_2 -> .)
    TO              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 189

state 140

    (74) factor -> CTELETRA punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)
    FOR             reduce using rule 120 (punto_codigoI_2 -> .)
    WHILE           reduce using rule 120 (punto_codigoI_2 -> .)
    IF              reduce using rule 120 (punto_codigoI_2 -> .)
    ESCRITURA       reduce using rule 120 (punto_codigoI_2 -> .)
    LECTURA         reduce using rule 120 (punto_codigoI_2 -> .)
    VAR             reduce using rule 120 (punto_codigoI_2 -> .)
    ID              reduce using rule 120 (punto_codigoI_2 -> .)
    RETURN          reduce using rule 120 (punto_codigoI_2 -> .)
    RCURLY          reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RBRACE          reduce using rule 120 (punto_codigoI_2 -> .)
    TO              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 190

state 141

    (75) factor -> CTEFRASE punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)
    FOR             reduce using rule 120 (punto_codigoI_2 -> .)
    WHILE           reduce using rule 120 (punto_codigoI_2 -> .)
    IF              reduce using rule 120 (punto_codigoI_2 -> .)
    ESCRITURA       reduce using rule 120 (punto_codigoI_2 -> .)
    LECTURA         reduce using rule 120 (punto_codigoI_2 -> .)
    VAR             reduce using rule 120 (punto_codigoI_2 -> .)
    ID              reduce using rule 120 (punto_codigoI_2 -> .)
    RETURN          reduce using rule 120 (punto_codigoI_2 -> .)
    RCURLY          reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RBRACE          reduce using rule 120 (punto_codigoI_2 -> .)
    TO              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 191

state 142

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO . expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 192
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 143

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 . ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8

    ID              shift and go to state 193


state 144

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion . punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (135) punto_codigoII_5 -> .

    RPAREN          reduce using rule 135 (punto_codigoII_5 -> .)

    punto_codigoII_5               shift and go to state 194

state 145

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 . RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3

    RPAREN          shift and go to state 195


state 146

    (88) escribir -> ESCRITURA LPAREN escribirB RPAREN .

    FOR             reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    WHILE           reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    IF              reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    ESCRITURA       reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    LECTURA         reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    VAR             reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    ID              reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    RETURN          reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)
    RCURLY          reduce using rule 88 (escribir -> ESCRITURA LPAREN escribirB RPAREN .)


state 147

    (89) escribirB -> expresion punto_codigoI_10 . escribirBB
    (92) escribirBB -> . COMMA escribirB
    (93) escribirBB -> . empty
    (100) empty -> .

    COMMA           shift and go to state 197
    RPAREN          reduce using rule 100 (empty -> .)

    escribirBB                     shift and go to state 196
    empty                          shift and go to state 198

state 148

    (90) escribirB -> CTEFRASE punto_semantico_17 . punto_codigoI_2 punto_codigoI_10 escribirBB
    (75) factor -> CTEFRASE punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 199

state 149

    (91) escribirB -> CTELETRA punto_semantico_17 . punto_codigoI_2 punto_codigoI_10 escribirBB
    (74) factor -> CTELETRA punto_semantico_17 . punto_codigoI_2
    (120) punto_codigoI_2 -> .

    COMMA           reduce using rule 120 (punto_codigoI_2 -> .)
    RPAREN          reduce using rule 120 (punto_codigoI_2 -> .)
    TIMES           reduce using rule 120 (punto_codigoI_2 -> .)
    DIVIDE          reduce using rule 120 (punto_codigoI_2 -> .)
    PLUS            reduce using rule 120 (punto_codigoI_2 -> .)
    MINUS           reduce using rule 120 (punto_codigoI_2 -> .)
    LT              reduce using rule 120 (punto_codigoI_2 -> .)
    GT              reduce using rule 120 (punto_codigoI_2 -> .)
    LTE             reduce using rule 120 (punto_codigoI_2 -> .)
    GTE             reduce using rule 120 (punto_codigoI_2 -> .)
    EQUAL           reduce using rule 120 (punto_codigoI_2 -> .)
    NEQUAL          reduce using rule 120 (punto_codigoI_2 -> .)
    AND             reduce using rule 120 (punto_codigoI_2 -> .)
    OR              reduce using rule 120 (punto_codigoI_2 -> .)

    punto_codigoI_2                shift and go to state 200

state 150

    (94) leer -> LECTURA LPAREN leerB RPAREN .

    FOR             reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    WHILE           reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    IF              reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    ESCRITURA       reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    LECTURA         reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    VAR             reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    ID              reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    RETURN          reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)
    RCURLY          reduce using rule 94 (leer -> LECTURA LPAREN leerB RPAREN .)


state 151

    (95) leerB -> ID punto_codigoI_1 . punto_codigoI_11 leerBB
    (129) punto_codigoI_11 -> .

    COMMA           reduce using rule 129 (punto_codigoI_11 -> .)
    RPAREN          reduce using rule 129 (punto_codigoI_11 -> .)

    punto_codigoI_11               shift and go to state 201

state 152

    (76) llam_func -> ID LPAREN llam_params RPAREN .

    FOR             reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    WHILE           reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    IF              reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    ESCRITURA       reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    LECTURA         reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    VAR             reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    ID              reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    RETURN          reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    RCURLY          reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    TIMES           reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    DIVIDE          reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    PLUS            reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    MINUS           reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    LT              reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    GT              reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    LTE             reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    GTE             reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    EQUAL           reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    NEQUAL          reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    AND             reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    OR              reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    RPAREN          reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    COMMA           reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    RBRACE          reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)
    TO              reduce using rule 76 (llam_func -> ID LPAREN llam_params RPAREN .)


state 153

    (79) llam_params -> expresion llam_paramsB .

    RPAREN          reduce using rule 79 (llam_params -> expresion llam_paramsB .)


state 154

    (80) llam_paramsB -> COMMA . llam_params
    (79) llam_params -> . expresion llam_paramsB
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    llam_params                    shift and go to state 202
    expresion                      shift and go to state 123
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 155

    (81) llam_paramsB -> empty .

    RPAREN          reduce using rule 81 (llam_paramsB -> empty .)


state 156

    (42) llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .

    ASSIGN          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    TIMES           reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    DIVIDE          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    PLUS            reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    MINUS           reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    LT              reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    GT              reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    LTE             reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    GTE             reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    EQUAL           reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    NEQUAL          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    AND             reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    OR              reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    FOR             reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    WHILE           reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    IF              reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    ESCRITURA       reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    LECTURA         reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    VAR             reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    ID              reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    RETURN          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    RCURLY          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    RPAREN          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    COMMA           reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    RBRACE          reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)
    TO              reduce using rule 42 (llam_vars -> ID punto_codigoI_1 llam_varsB punto_arreglos_6 .)


state 157

    (43) llam_varsB -> LBRACE punto_arreglos_1 . punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
    (126) punto_codigoI_8 -> .

    LPAREN          reduce using rule 126 (punto_codigoI_8 -> .)
    CTEENT          reduce using rule 126 (punto_codigoI_8 -> .)
    CTEDECI         reduce using rule 126 (punto_codigoI_8 -> .)
    CTELETRA        reduce using rule 126 (punto_codigoI_8 -> .)
    CTEFRASE        reduce using rule 126 (punto_codigoI_8 -> .)
    ID              reduce using rule 126 (punto_codigoI_8 -> .)
    TRUE            reduce using rule 126 (punto_codigoI_8 -> .)
    FALSE           reduce using rule 126 (punto_codigoI_8 -> .)

    punto_codigoI_8                shift and go to state 203

state 158

    (98) regresar -> RETURN LPAREN expresion RPAREN .

    FOR             reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    WHILE           reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    IF              reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    ESCRITURA       reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    LECTURA         reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    VAR             reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    ID              reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    RETURN          reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 98 (regresar -> RETURN LPAREN expresion RPAREN .)


state 159

    (24) dec_params -> ID punto_semantico_11 COLON tipo . punto_semantico_5 punto_semantico_12 dec_paramsB
    (105) punto_semantico_5 -> .

    COMMA           reduce using rule 105 (punto_semantico_5 -> .)
    RPAREN          reduce using rule 105 (punto_semantico_5 -> .)

    punto_semantico_5              shift and go to state 204

state 160

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func . punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14
    (113) punto_semantico_13 -> .

    LCURLY          reduce using rule 113 (punto_semantico_13 -> .)

    punto_semantico_13             shift and go to state 205

state 161

    (27) tipo_func -> tipo .

    LCURLY          reduce using rule 27 (tipo_func -> tipo .)


state 162

    (28) tipo_func -> VOID .

    LCURLY          reduce using rule 28 (tipo_func -> VOID .)


state 163

    (13) dec_varsB2 -> LBRACE . CTEENT punto_semantico_7 RBRACE

    CTEENT          shift and go to state 206


state 164

    (11) dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .

    VAR             reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    FUNCION         reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    FOR             reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    WHILE           reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    IF              reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    ESCRITURA       reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    LECTURA         reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    ID              reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    RETURN          reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)
    RCURLY          reduce using rule 11 (dec_varsB -> LBRACE CTEENT punto_semantico_6 RBRACE dec_varsB2 .)


state 165

    (14) dec_varsB2 -> empty .

    VAR             reduce using rule 14 (dec_varsB2 -> empty .)
    FUNCION         reduce using rule 14 (dec_varsB2 -> empty .)
    FOR             reduce using rule 14 (dec_varsB2 -> empty .)
    WHILE           reduce using rule 14 (dec_varsB2 -> empty .)
    IF              reduce using rule 14 (dec_varsB2 -> empty .)
    ESCRITURA       reduce using rule 14 (dec_varsB2 -> empty .)
    LECTURA         reduce using rule 14 (dec_varsB2 -> empty .)
    ID              reduce using rule 14 (dec_varsB2 -> empty .)
    RETURN          reduce using rule 14 (dec_varsB2 -> empty .)
    RCURLY          reduce using rule 14 (dec_varsB2 -> empty .)


state 166

    (48) peta_exp -> tera_exp punto_codigoI_4 peta_expB .

    FOR             reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    WHILE           reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    IF              reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    ESCRITURA       reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    LECTURA         reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    VAR             reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    ID              reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    RETURN          reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    RCURLY          reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    RPAREN          reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    COMMA           reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    RBRACE          reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)
    TO              reduce using rule 48 (peta_exp -> tera_exp punto_codigoI_4 peta_expB .)


state 167

    (49) peta_expB -> AND . punto_codigoI_3 peta_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 207

state 168

    (50) peta_expB -> OR . punto_codigoI_3 peta_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 208

state 169

    (51) peta_expB -> empty .

    FOR             reduce using rule 51 (peta_expB -> empty .)
    WHILE           reduce using rule 51 (peta_expB -> empty .)
    IF              reduce using rule 51 (peta_expB -> empty .)
    ESCRITURA       reduce using rule 51 (peta_expB -> empty .)
    LECTURA         reduce using rule 51 (peta_expB -> empty .)
    VAR             reduce using rule 51 (peta_expB -> empty .)
    ID              reduce using rule 51 (peta_expB -> empty .)
    RETURN          reduce using rule 51 (peta_expB -> empty .)
    RCURLY          reduce using rule 51 (peta_expB -> empty .)
    RPAREN          reduce using rule 51 (peta_expB -> empty .)
    COMMA           reduce using rule 51 (peta_expB -> empty .)
    RBRACE          reduce using rule 51 (peta_expB -> empty .)
    TO              reduce using rule 51 (peta_expB -> empty .)


state 170

    (52) tera_exp -> mega_exp punto_codigoI_5 tera_expB .

    AND             reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    OR              reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    FOR             reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    WHILE           reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    IF              reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    ESCRITURA       reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    LECTURA         reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    VAR             reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    ID              reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    RETURN          reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    RCURLY          reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    RPAREN          reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    COMMA           reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    RBRACE          reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)
    TO              reduce using rule 52 (tera_exp -> mega_exp punto_codigoI_5 tera_expB .)


state 171

    (53) tera_expB -> LT . punto_codigoI_3 tera_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 209

state 172

    (54) tera_expB -> GT . punto_codigoI_3 tera_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 210

state 173

    (55) tera_expB -> LTE . punto_codigoI_3 tera_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 211

state 174

    (56) tera_expB -> GTE . punto_codigoI_3 tera_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 212

state 175

    (57) tera_expB -> EQUAL . punto_codigoI_3 tera_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 213

state 176

    (58) tera_expB -> NEQUAL . punto_codigoI_3 tera_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 214

state 177

    (59) tera_expB -> empty .

    AND             reduce using rule 59 (tera_expB -> empty .)
    OR              reduce using rule 59 (tera_expB -> empty .)
    FOR             reduce using rule 59 (tera_expB -> empty .)
    WHILE           reduce using rule 59 (tera_expB -> empty .)
    IF              reduce using rule 59 (tera_expB -> empty .)
    ESCRITURA       reduce using rule 59 (tera_expB -> empty .)
    LECTURA         reduce using rule 59 (tera_expB -> empty .)
    VAR             reduce using rule 59 (tera_expB -> empty .)
    ID              reduce using rule 59 (tera_expB -> empty .)
    RETURN          reduce using rule 59 (tera_expB -> empty .)
    RCURLY          reduce using rule 59 (tera_expB -> empty .)
    RPAREN          reduce using rule 59 (tera_expB -> empty .)
    COMMA           reduce using rule 59 (tera_expB -> empty .)
    RBRACE          reduce using rule 59 (tera_expB -> empty .)
    TO              reduce using rule 59 (tera_expB -> empty .)


state 178

    (60) mega_exp -> kilo_exp punto_codigoI_6 mega_expB .

    LT              reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    GT              reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    LTE             reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    GTE             reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    EQUAL           reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    NEQUAL          reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    AND             reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    OR              reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    FOR             reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    WHILE           reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    IF              reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    ESCRITURA       reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    LECTURA         reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    VAR             reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    ID              reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    RETURN          reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    RCURLY          reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    RPAREN          reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    COMMA           reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    RBRACE          reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)
    TO              reduce using rule 60 (mega_exp -> kilo_exp punto_codigoI_6 mega_expB .)


state 179

    (61) mega_expB -> PLUS . punto_codigoI_3 mega_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 215

state 180

    (62) mega_expB -> MINUS . punto_codigoI_3 mega_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 216

state 181

    (63) mega_expB -> empty .

    LT              reduce using rule 63 (mega_expB -> empty .)
    GT              reduce using rule 63 (mega_expB -> empty .)
    LTE             reduce using rule 63 (mega_expB -> empty .)
    GTE             reduce using rule 63 (mega_expB -> empty .)
    EQUAL           reduce using rule 63 (mega_expB -> empty .)
    NEQUAL          reduce using rule 63 (mega_expB -> empty .)
    AND             reduce using rule 63 (mega_expB -> empty .)
    OR              reduce using rule 63 (mega_expB -> empty .)
    FOR             reduce using rule 63 (mega_expB -> empty .)
    WHILE           reduce using rule 63 (mega_expB -> empty .)
    IF              reduce using rule 63 (mega_expB -> empty .)
    ESCRITURA       reduce using rule 63 (mega_expB -> empty .)
    LECTURA         reduce using rule 63 (mega_expB -> empty .)
    VAR             reduce using rule 63 (mega_expB -> empty .)
    ID              reduce using rule 63 (mega_expB -> empty .)
    RETURN          reduce using rule 63 (mega_expB -> empty .)
    RCURLY          reduce using rule 63 (mega_expB -> empty .)
    RPAREN          reduce using rule 63 (mega_expB -> empty .)
    COMMA           reduce using rule 63 (mega_expB -> empty .)
    RBRACE          reduce using rule 63 (mega_expB -> empty .)
    TO              reduce using rule 63 (mega_expB -> empty .)


state 182

    (64) kilo_exp -> factor punto_codigoI_7 kilo_expB .

    PLUS            reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    MINUS           reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    LT              reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    GT              reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    LTE             reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    GTE             reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    EQUAL           reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    NEQUAL          reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    AND             reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    OR              reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    FOR             reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    WHILE           reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    IF              reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    ESCRITURA       reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    LECTURA         reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    VAR             reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    ID              reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    RETURN          reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    RCURLY          reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    RPAREN          reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    COMMA           reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    RBRACE          reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)
    TO              reduce using rule 64 (kilo_exp -> factor punto_codigoI_7 kilo_expB .)


state 183

    (65) kilo_expB -> TIMES . punto_codigoI_3 kilo_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 217

state 184

    (66) kilo_expB -> DIVIDE . punto_codigoI_3 kilo_exp
    (121) punto_codigoI_3 -> .

    LPAREN          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEENT          reduce using rule 121 (punto_codigoI_3 -> .)
    CTEDECI         reduce using rule 121 (punto_codigoI_3 -> .)
    CTELETRA        reduce using rule 121 (punto_codigoI_3 -> .)
    CTEFRASE        reduce using rule 121 (punto_codigoI_3 -> .)
    ID              reduce using rule 121 (punto_codigoI_3 -> .)
    TRUE            reduce using rule 121 (punto_codigoI_3 -> .)
    FALSE           reduce using rule 121 (punto_codigoI_3 -> .)

    punto_codigoI_3                shift and go to state 218

state 185

    (67) kilo_expB -> empty .

    PLUS            reduce using rule 67 (kilo_expB -> empty .)
    MINUS           reduce using rule 67 (kilo_expB -> empty .)
    LT              reduce using rule 67 (kilo_expB -> empty .)
    GT              reduce using rule 67 (kilo_expB -> empty .)
    LTE             reduce using rule 67 (kilo_expB -> empty .)
    GTE             reduce using rule 67 (kilo_expB -> empty .)
    EQUAL           reduce using rule 67 (kilo_expB -> empty .)
    NEQUAL          reduce using rule 67 (kilo_expB -> empty .)
    AND             reduce using rule 67 (kilo_expB -> empty .)
    OR              reduce using rule 67 (kilo_expB -> empty .)
    FOR             reduce using rule 67 (kilo_expB -> empty .)
    WHILE           reduce using rule 67 (kilo_expB -> empty .)
    IF              reduce using rule 67 (kilo_expB -> empty .)
    ESCRITURA       reduce using rule 67 (kilo_expB -> empty .)
    LECTURA         reduce using rule 67 (kilo_expB -> empty .)
    VAR             reduce using rule 67 (kilo_expB -> empty .)
    ID              reduce using rule 67 (kilo_expB -> empty .)
    RETURN          reduce using rule 67 (kilo_expB -> empty .)
    RCURLY          reduce using rule 67 (kilo_expB -> empty .)
    RPAREN          reduce using rule 67 (kilo_expB -> empty .)
    COMMA           reduce using rule 67 (kilo_expB -> empty .)
    RBRACE          reduce using rule 67 (kilo_expB -> empty .)
    TO              reduce using rule 67 (kilo_expB -> empty .)


state 186

    (68) factor -> LPAREN punto_codigoI_8 expresion . RPAREN punto_codigoI_9

    RPAREN          shift and go to state 219


state 187

    (71) factor -> CTEENT punto_semantico_17 punto_codigoI_2 .

    TIMES           reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    FOR             reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    WHILE           reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    IF              reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    ESCRITURA       reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    LECTURA         reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    VAR             reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    ID              reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    RETURN          reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    RCURLY          reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    RBRACE          reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)
    TO              reduce using rule 71 (factor -> CTEENT punto_semantico_17 punto_codigoI_2 .)


state 188

    (72) factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .

    TIMES           reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    FOR             reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    WHILE           reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    IF              reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    ESCRITURA       reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    LECTURA         reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    VAR             reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    ID              reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    RETURN          reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    RCURLY          reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    RBRACE          reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)
    TO              reduce using rule 72 (factor -> CTEDECI punto_semantico_17 punto_codigoI_2 .)


state 189

    (73) factor -> cte_bool punto_semantico_17 punto_codigoI_2 .

    TIMES           reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    FOR             reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    WHILE           reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    IF              reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    ESCRITURA       reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    LECTURA         reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    VAR             reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    ID              reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    RETURN          reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    RCURLY          reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    RBRACE          reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)
    TO              reduce using rule 73 (factor -> cte_bool punto_semantico_17 punto_codigoI_2 .)


state 190

    (74) factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .

    TIMES           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    FOR             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    WHILE           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    IF              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    ESCRITURA       reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    LECTURA         reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    VAR             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    ID              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    RETURN          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    RCURLY          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    RBRACE          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    TO              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)


state 191

    (75) factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .

    TIMES           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    FOR             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    WHILE           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    IF              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    ESCRITURA       reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    LECTURA         reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    VAR             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    ID              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    RETURN          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    RCURLY          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    RBRACE          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    TO              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)


state 192

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion . punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (139) punto_codigoII_9 -> .

    RPAREN          reduce using rule 139 (punto_codigoII_9 -> .)

    punto_codigoII_9               shift and go to state 220

state 193

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID . punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8
    (104) punto_semantico_4 -> .

    COLON           reduce using rule 104 (punto_semantico_4 -> .)

    punto_semantico_4              shift and go to state 221

state 194

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 . RPAREN LCURLY bloque RCURLY punto_codigoII_6

    RPAREN          shift and go to state 222


state 195

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN . LCURLY bloque RCURLY condicionB punto_codigoII_3

    LCURLY          shift and go to state 223


state 196

    (89) escribirB -> expresion punto_codigoI_10 escribirBB .

    RPAREN          reduce using rule 89 (escribirB -> expresion punto_codigoI_10 escribirBB .)


state 197

    (92) escribirBB -> COMMA . escribirB
    (89) escribirB -> . expresion punto_codigoI_10 escribirBB
    (90) escribirB -> . CTEFRASE punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
    (91) escribirB -> . CTELETRA punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    CTEFRASE        shift and go to state 118
    CTELETRA        shift and go to state 119
    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    escribirB                      shift and go to state 224
    expresion                      shift and go to state 117
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 198

    (93) escribirBB -> empty .

    RPAREN          reduce using rule 93 (escribirBB -> empty .)


state 199

    (90) escribirB -> CTEFRASE punto_semantico_17 punto_codigoI_2 . punto_codigoI_10 escribirBB
    (75) factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .
    (128) punto_codigoI_10 -> .

  ! reduce/reduce conflict for COMMA resolved using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
  ! reduce/reduce conflict for RPAREN resolved using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    TIMES           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 75 (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2 .)

  ! COMMA           [ reduce using rule 128 (punto_codigoI_10 -> .) ]
  ! RPAREN          [ reduce using rule 128 (punto_codigoI_10 -> .) ]

    punto_codigoI_10               shift and go to state 225

state 200

    (91) escribirB -> CTELETRA punto_semantico_17 punto_codigoI_2 . punto_codigoI_10 escribirBB
    (74) factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .
    (128) punto_codigoI_10 -> .

  ! reduce/reduce conflict for COMMA resolved using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
  ! reduce/reduce conflict for RPAREN resolved using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    TIMES           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    DIVIDE          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    PLUS            reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    MINUS           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    LT              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    GT              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    LTE             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    GTE             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    EQUAL           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    NEQUAL          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    AND             reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    OR              reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    COMMA           reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)
    RPAREN          reduce using rule 74 (factor -> CTELETRA punto_semantico_17 punto_codigoI_2 .)

  ! COMMA           [ reduce using rule 128 (punto_codigoI_10 -> .) ]
  ! RPAREN          [ reduce using rule 128 (punto_codigoI_10 -> .) ]

    punto_codigoI_10               shift and go to state 226

state 201

    (95) leerB -> ID punto_codigoI_1 punto_codigoI_11 . leerBB
    (96) leerBB -> . COMMA leerB
    (97) leerBB -> . empty
    (100) empty -> .

    COMMA           shift and go to state 228
    RPAREN          reduce using rule 100 (empty -> .)

    leerBB                         shift and go to state 227
    empty                          shift and go to state 229

state 202

    (80) llam_paramsB -> COMMA llam_params .

    RPAREN          reduce using rule 80 (llam_paramsB -> COMMA llam_params .)


state 203

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 . expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 230
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 204

    (24) dec_params -> ID punto_semantico_11 COLON tipo punto_semantico_5 . punto_semantico_12 dec_paramsB
    (112) punto_semantico_12 -> .

    COMMA           reduce using rule 112 (punto_semantico_12 -> .)
    RPAREN          reduce using rule 112 (punto_semantico_12 -> .)

    punto_semantico_12             shift and go to state 231

state 205

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 . LCURLY bloque RCURLY punto_semantico_14

    LCURLY          shift and go to state 232


state 206

    (13) dec_varsB2 -> LBRACE CTEENT . punto_semantico_7 RBRACE
    (107) punto_semantico_7 -> .

    RBRACE          reduce using rule 107 (punto_semantico_7 -> .)

    punto_semantico_7              shift and go to state 233

state 207

    (49) peta_expB -> AND punto_codigoI_3 . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    peta_exp                       shift and go to state 234
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 208

    (50) peta_expB -> OR punto_codigoI_3 . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    peta_exp                       shift and go to state 235
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 209

    (53) tera_expB -> LT punto_codigoI_3 . tera_exp
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    tera_exp                       shift and go to state 236
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 210

    (54) tera_expB -> GT punto_codigoI_3 . tera_exp
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    tera_exp                       shift and go to state 237
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 211

    (55) tera_expB -> LTE punto_codigoI_3 . tera_exp
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    tera_exp                       shift and go to state 238
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 212

    (56) tera_expB -> GTE punto_codigoI_3 . tera_exp
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    tera_exp                       shift and go to state 239
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 213

    (57) tera_expB -> EQUAL punto_codigoI_3 . tera_exp
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    tera_exp                       shift and go to state 240
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 214

    (58) tera_expB -> NEQUAL punto_codigoI_3 . tera_exp
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    tera_exp                       shift and go to state 241
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 215

    (61) mega_expB -> PLUS punto_codigoI_3 . mega_exp
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    mega_exp                       shift and go to state 242
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 216

    (62) mega_expB -> MINUS punto_codigoI_3 . mega_exp
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    mega_exp                       shift and go to state 243
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 217

    (65) kilo_expB -> TIMES punto_codigoI_3 . kilo_exp
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    kilo_exp                       shift and go to state 244
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 218

    (66) kilo_expB -> DIVIDE punto_codigoI_3 . kilo_exp
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    kilo_exp                       shift and go to state 245
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 219

    (68) factor -> LPAREN punto_codigoI_8 expresion RPAREN . punto_codigoI_9
    (127) punto_codigoI_9 -> .

    TIMES           reduce using rule 127 (punto_codigoI_9 -> .)
    DIVIDE          reduce using rule 127 (punto_codigoI_9 -> .)
    PLUS            reduce using rule 127 (punto_codigoI_9 -> .)
    MINUS           reduce using rule 127 (punto_codigoI_9 -> .)
    LT              reduce using rule 127 (punto_codigoI_9 -> .)
    GT              reduce using rule 127 (punto_codigoI_9 -> .)
    LTE             reduce using rule 127 (punto_codigoI_9 -> .)
    GTE             reduce using rule 127 (punto_codigoI_9 -> .)
    EQUAL           reduce using rule 127 (punto_codigoI_9 -> .)
    NEQUAL          reduce using rule 127 (punto_codigoI_9 -> .)
    AND             reduce using rule 127 (punto_codigoI_9 -> .)
    OR              reduce using rule 127 (punto_codigoI_9 -> .)
    FOR             reduce using rule 127 (punto_codigoI_9 -> .)
    WHILE           reduce using rule 127 (punto_codigoI_9 -> .)
    IF              reduce using rule 127 (punto_codigoI_9 -> .)
    ESCRITURA       reduce using rule 127 (punto_codigoI_9 -> .)
    LECTURA         reduce using rule 127 (punto_codigoI_9 -> .)
    VAR             reduce using rule 127 (punto_codigoI_9 -> .)
    ID              reduce using rule 127 (punto_codigoI_9 -> .)
    RETURN          reduce using rule 127 (punto_codigoI_9 -> .)
    RCURLY          reduce using rule 127 (punto_codigoI_9 -> .)
    RPAREN          reduce using rule 127 (punto_codigoI_9 -> .)
    COMMA           reduce using rule 127 (punto_codigoI_9 -> .)
    RBRACE          reduce using rule 127 (punto_codigoI_9 -> .)
    TO              reduce using rule 127 (punto_codigoI_9 -> .)

    punto_codigoI_9                shift and go to state 246

state 220

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 . RPAREN LCURLY bloque RCURLY punto_codigoII_10

    RPAREN          shift and go to state 247


state 221

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 . COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8

    COLON           shift and go to state 248


state 222

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN . LCURLY bloque RCURLY punto_codigoII_6

    LCURLY          shift and go to state 249


state 223

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY . bloque RCURLY condicionB punto_codigoII_3
    (29) bloque -> . bloqueB bloqueBB
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloque                         shift and go to state 250
    bloqueB                        shift and go to state 49
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 224

    (92) escribirBB -> COMMA escribirB .

    RPAREN          reduce using rule 92 (escribirBB -> COMMA escribirB .)


state 225

    (90) escribirB -> CTEFRASE punto_semantico_17 punto_codigoI_2 punto_codigoI_10 . escribirBB
    (92) escribirBB -> . COMMA escribirB
    (93) escribirBB -> . empty
    (100) empty -> .

    COMMA           shift and go to state 197
    RPAREN          reduce using rule 100 (empty -> .)

    escribirBB                     shift and go to state 251
    empty                          shift and go to state 198

state 226

    (91) escribirB -> CTELETRA punto_semantico_17 punto_codigoI_2 punto_codigoI_10 . escribirBB
    (92) escribirBB -> . COMMA escribirB
    (93) escribirBB -> . empty
    (100) empty -> .

    COMMA           shift and go to state 197
    RPAREN          reduce using rule 100 (empty -> .)

    escribirBB                     shift and go to state 252
    empty                          shift and go to state 198

state 227

    (95) leerB -> ID punto_codigoI_1 punto_codigoI_11 leerBB .

    RPAREN          reduce using rule 95 (leerB -> ID punto_codigoI_1 punto_codigoI_11 leerBB .)


state 228

    (96) leerBB -> COMMA . leerB
    (95) leerB -> . ID punto_codigoI_1 punto_codigoI_11 leerBB

    ID              shift and go to state 121

    leerB                          shift and go to state 253

state 229

    (97) leerBB -> empty .

    RPAREN          reduce using rule 97 (leerBB -> empty .)


state 230

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion . punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
    (142) punto_arreglos_2 -> .

    RBRACE          reduce using rule 142 (punto_arreglos_2 -> .)

    punto_arreglos_2               shift and go to state 254

state 231

    (24) dec_params -> ID punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 . dec_paramsB
    (25) dec_paramsB -> . COMMA dec_params
    (26) dec_paramsB -> . empty
    (100) empty -> .

    COMMA           shift and go to state 256
    RPAREN          reduce using rule 100 (empty -> .)

    dec_paramsB                    shift and go to state 255
    empty                          shift and go to state 257

state 232

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY . bloque RCURLY punto_semantico_14
    (29) bloque -> . bloqueB bloqueBB
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloque                         shift and go to state 258
    bloqueB                        shift and go to state 49
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 233

    (13) dec_varsB2 -> LBRACE CTEENT punto_semantico_7 . RBRACE

    RBRACE          shift and go to state 259


state 234

    (49) peta_expB -> AND punto_codigoI_3 peta_exp .

    FOR             reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    WHILE           reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    IF              reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    ESCRITURA       reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    LECTURA         reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    VAR             reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    ID              reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    RETURN          reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    RCURLY          reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    RPAREN          reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    COMMA           reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    RBRACE          reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)
    TO              reduce using rule 49 (peta_expB -> AND punto_codigoI_3 peta_exp .)


state 235

    (50) peta_expB -> OR punto_codigoI_3 peta_exp .

    FOR             reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    WHILE           reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    IF              reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    ESCRITURA       reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    LECTURA         reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    VAR             reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    ID              reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    RETURN          reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    RCURLY          reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    RPAREN          reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    COMMA           reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    RBRACE          reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)
    TO              reduce using rule 50 (peta_expB -> OR punto_codigoI_3 peta_exp .)


state 236

    (53) tera_expB -> LT punto_codigoI_3 tera_exp .

    AND             reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    OR              reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    FOR             reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    WHILE           reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    IF              reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    ESCRITURA       reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    LECTURA         reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    VAR             reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    ID              reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    RETURN          reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    RCURLY          reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    RPAREN          reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    COMMA           reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    RBRACE          reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)
    TO              reduce using rule 53 (tera_expB -> LT punto_codigoI_3 tera_exp .)


state 237

    (54) tera_expB -> GT punto_codigoI_3 tera_exp .

    AND             reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    OR              reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    FOR             reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    WHILE           reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    IF              reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    ESCRITURA       reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    LECTURA         reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    VAR             reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    ID              reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    RETURN          reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    RCURLY          reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    RPAREN          reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    COMMA           reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    RBRACE          reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)
    TO              reduce using rule 54 (tera_expB -> GT punto_codigoI_3 tera_exp .)


state 238

    (55) tera_expB -> LTE punto_codigoI_3 tera_exp .

    AND             reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    OR              reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    FOR             reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    WHILE           reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    IF              reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    ESCRITURA       reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    LECTURA         reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    VAR             reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    ID              reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    RETURN          reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    RCURLY          reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    RPAREN          reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    COMMA           reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    RBRACE          reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)
    TO              reduce using rule 55 (tera_expB -> LTE punto_codigoI_3 tera_exp .)


state 239

    (56) tera_expB -> GTE punto_codigoI_3 tera_exp .

    AND             reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    OR              reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    FOR             reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    WHILE           reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    IF              reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    ESCRITURA       reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    LECTURA         reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    VAR             reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    ID              reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    RETURN          reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    RCURLY          reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    RPAREN          reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    COMMA           reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    RBRACE          reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)
    TO              reduce using rule 56 (tera_expB -> GTE punto_codigoI_3 tera_exp .)


state 240

    (57) tera_expB -> EQUAL punto_codigoI_3 tera_exp .

    AND             reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    OR              reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    FOR             reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    WHILE           reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    IF              reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    ESCRITURA       reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    LECTURA         reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    VAR             reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    ID              reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    RETURN          reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    RCURLY          reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    RPAREN          reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    COMMA           reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    RBRACE          reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)
    TO              reduce using rule 57 (tera_expB -> EQUAL punto_codigoI_3 tera_exp .)


state 241

    (58) tera_expB -> NEQUAL punto_codigoI_3 tera_exp .

    AND             reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    OR              reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    FOR             reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    WHILE           reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    IF              reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    ESCRITURA       reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    LECTURA         reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    VAR             reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    ID              reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    RETURN          reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    RCURLY          reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    RPAREN          reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    COMMA           reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    RBRACE          reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)
    TO              reduce using rule 58 (tera_expB -> NEQUAL punto_codigoI_3 tera_exp .)


state 242

    (61) mega_expB -> PLUS punto_codigoI_3 mega_exp .

    LT              reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    GT              reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    LTE             reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    GTE             reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    EQUAL           reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    NEQUAL          reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    AND             reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    OR              reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    FOR             reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    WHILE           reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    IF              reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    ESCRITURA       reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    LECTURA         reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    VAR             reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    ID              reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    RETURN          reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    RCURLY          reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    RPAREN          reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    COMMA           reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    RBRACE          reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)
    TO              reduce using rule 61 (mega_expB -> PLUS punto_codigoI_3 mega_exp .)


state 243

    (62) mega_expB -> MINUS punto_codigoI_3 mega_exp .

    LT              reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    GT              reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    LTE             reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    GTE             reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    EQUAL           reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    NEQUAL          reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    AND             reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    OR              reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    FOR             reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    WHILE           reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    IF              reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    ESCRITURA       reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    LECTURA         reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    VAR             reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    ID              reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    RETURN          reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    RCURLY          reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    RPAREN          reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    COMMA           reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    RBRACE          reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)
    TO              reduce using rule 62 (mega_expB -> MINUS punto_codigoI_3 mega_exp .)


state 244

    (65) kilo_expB -> TIMES punto_codigoI_3 kilo_exp .

    PLUS            reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    MINUS           reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    LT              reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    GT              reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    LTE             reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    GTE             reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    EQUAL           reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    NEQUAL          reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    AND             reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    OR              reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    FOR             reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    WHILE           reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    IF              reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    ESCRITURA       reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    LECTURA         reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    VAR             reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    ID              reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    RETURN          reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    RCURLY          reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    RPAREN          reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    COMMA           reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    RBRACE          reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)
    TO              reduce using rule 65 (kilo_expB -> TIMES punto_codigoI_3 kilo_exp .)


state 245

    (66) kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .

    PLUS            reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    MINUS           reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    LT              reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    GT              reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    LTE             reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    GTE             reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    EQUAL           reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    NEQUAL          reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    AND             reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    OR              reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    FOR             reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    WHILE           reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    IF              reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    ESCRITURA       reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    LECTURA         reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    VAR             reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    ID              reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    RETURN          reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    RCURLY          reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    RPAREN          reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    COMMA           reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    RBRACE          reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)
    TO              reduce using rule 66 (kilo_expB -> DIVIDE punto_codigoI_3 kilo_exp .)


state 246

    (68) factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .

    TIMES           reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    DIVIDE          reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    PLUS            reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    MINUS           reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    LT              reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    GT              reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    LTE             reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    GTE             reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    EQUAL           reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    NEQUAL          reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    AND             reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    OR              reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    FOR             reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    WHILE           reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    IF              reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    ESCRITURA       reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    LECTURA         reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    VAR             reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    ID              reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    RETURN          reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    RCURLY          reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    RPAREN          reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    COMMA           reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    RBRACE          reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)
    TO              reduce using rule 68 (factor -> LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9 .)


state 247

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN . LCURLY bloque RCURLY punto_codigoII_10

    LCURLY          shift and go to state 260


state 248

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON . tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8
    (17) tipo -> . TIPOENT
    (18) tipo -> . TIPODEC
    (19) tipo -> . TIPOLETRA
    (20) tipo -> . TIPOLOGI

    TIPOENT         shift and go to state 31
    TIPODEC         shift and go to state 32
    TIPOLETRA       shift and go to state 33
    TIPOLOGI        shift and go to state 34

    tipo                           shift and go to state 261

state 249

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY . bloque RCURLY punto_codigoII_6
    (29) bloque -> . bloqueB bloqueBB
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloque                         shift and go to state 262
    bloqueB                        shift and go to state 49
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 250

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque . RCURLY condicionB punto_codigoII_3

    RCURLY          shift and go to state 263


state 251

    (90) escribirB -> CTEFRASE punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB .

    RPAREN          reduce using rule 90 (escribirB -> CTEFRASE punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB .)


state 252

    (91) escribirB -> CTELETRA punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB .

    RPAREN          reduce using rule 91 (escribirB -> CTELETRA punto_semantico_17 punto_codigoI_2 punto_codigoI_10 escribirBB .)


state 253

    (96) leerBB -> COMMA leerB .

    RPAREN          reduce using rule 96 (leerBB -> COMMA leerB .)


state 254

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 . punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2
    (144) punto_arreglos_4 -> .

    RBRACE          reduce using rule 144 (punto_arreglos_4 -> .)

    punto_arreglos_4               shift and go to state 264

state 255

    (24) dec_params -> ID punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB .

    RPAREN          reduce using rule 24 (dec_params -> ID punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB .)


state 256

    (25) dec_paramsB -> COMMA . dec_params
    (24) dec_params -> . ID punto_semantico_11 COLON tipo punto_semantico_5 punto_semantico_12 dec_paramsB

    ID              shift and go to state 67

    dec_params                     shift and go to state 265

state 257

    (26) dec_paramsB -> empty .

    RPAREN          reduce using rule 26 (dec_paramsB -> empty .)


state 258

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque . RCURLY punto_semantico_14

    RCURLY          shift and go to state 266


state 259

    (13) dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .

    VAR             reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    FUNCION         reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    FOR             reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    WHILE           reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    IF              reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    ESCRITURA       reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    LECTURA         reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    ID              reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    RETURN          reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)
    RCURLY          reduce using rule 13 (dec_varsB2 -> LBRACE CTEENT punto_semantico_7 RBRACE .)


state 260

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY . bloque RCURLY punto_codigoII_10
    (29) bloque -> . bloqueB bloqueBB
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloque                         shift and go to state 267
    bloqueB                        shift and go to state 49
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 261

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo . punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8
    (105) punto_semantico_5 -> .

    ASSIGN          reduce using rule 105 (punto_semantico_5 -> .)

    punto_semantico_5              shift and go to state 268

state 262

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque . RCURLY punto_codigoII_6

    RCURLY          shift and go to state 269


state 263

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY . condicionB punto_codigoII_3
    (86) condicionB -> . ELSE punto_codigoII_2 LCURLY bloque RCURLY
    (87) condicionB -> . empty
    (100) empty -> .

    ELSE            shift and go to state 271
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)

    condicionB                     shift and go to state 270
    empty                          shift and go to state 272

state 264

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 . RBRACE punto_codigoI_9 llam_varsB2

    RBRACE          shift and go to state 273


state 265

    (25) dec_paramsB -> COMMA dec_params .

    RPAREN          reduce using rule 25 (dec_paramsB -> COMMA dec_params .)


state 266

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY . punto_semantico_14
    (114) punto_semantico_14 -> .

    FUNCION         reduce using rule 114 (punto_semantico_14 -> .)
    MAIN            reduce using rule 114 (punto_semantico_14 -> .)

    punto_semantico_14             shift and go to state 274

state 267

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque . RCURLY punto_codigoII_10

    RCURLY          shift and go to state 275


state 268

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 . punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8
    (108) punto_semantico_8 -> .

    ASSIGN          reduce using rule 108 (punto_semantico_8 -> .)

    punto_semantico_8              shift and go to state 276

state 269

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY . punto_codigoII_6
    (136) punto_codigoII_6 -> .

    FOR             reduce using rule 136 (punto_codigoII_6 -> .)
    WHILE           reduce using rule 136 (punto_codigoII_6 -> .)
    IF              reduce using rule 136 (punto_codigoII_6 -> .)
    ESCRITURA       reduce using rule 136 (punto_codigoII_6 -> .)
    LECTURA         reduce using rule 136 (punto_codigoII_6 -> .)
    VAR             reduce using rule 136 (punto_codigoII_6 -> .)
    ID              reduce using rule 136 (punto_codigoII_6 -> .)
    RETURN          reduce using rule 136 (punto_codigoII_6 -> .)
    RCURLY          reduce using rule 136 (punto_codigoII_6 -> .)

    punto_codigoII_6               shift and go to state 277

state 270

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB . punto_codigoII_3
    (133) punto_codigoII_3 -> .

    FOR             reduce using rule 133 (punto_codigoII_3 -> .)
    WHILE           reduce using rule 133 (punto_codigoII_3 -> .)
    IF              reduce using rule 133 (punto_codigoII_3 -> .)
    ESCRITURA       reduce using rule 133 (punto_codigoII_3 -> .)
    LECTURA         reduce using rule 133 (punto_codigoII_3 -> .)
    VAR             reduce using rule 133 (punto_codigoII_3 -> .)
    ID              reduce using rule 133 (punto_codigoII_3 -> .)
    RETURN          reduce using rule 133 (punto_codigoII_3 -> .)
    RCURLY          reduce using rule 133 (punto_codigoII_3 -> .)

    punto_codigoII_3               shift and go to state 278

state 271

    (86) condicionB -> ELSE . punto_codigoII_2 LCURLY bloque RCURLY
    (132) punto_codigoII_2 -> .

    LCURLY          reduce using rule 132 (punto_codigoII_2 -> .)

    punto_codigoII_2               shift and go to state 279

state 272

    (87) condicionB -> empty .

    FOR             reduce using rule 87 (condicionB -> empty .)
    WHILE           reduce using rule 87 (condicionB -> empty .)
    IF              reduce using rule 87 (condicionB -> empty .)
    ESCRITURA       reduce using rule 87 (condicionB -> empty .)
    LECTURA         reduce using rule 87 (condicionB -> empty .)
    VAR             reduce using rule 87 (condicionB -> empty .)
    ID              reduce using rule 87 (condicionB -> empty .)
    RETURN          reduce using rule 87 (condicionB -> empty .)
    RCURLY          reduce using rule 87 (condicionB -> empty .)


state 273

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE . punto_codigoI_9 llam_varsB2
    (127) punto_codigoI_9 -> .

    LBRACE          reduce using rule 127 (punto_codigoI_9 -> .)
    ASSIGN          reduce using rule 127 (punto_codigoI_9 -> .)
    TIMES           reduce using rule 127 (punto_codigoI_9 -> .)
    DIVIDE          reduce using rule 127 (punto_codigoI_9 -> .)
    PLUS            reduce using rule 127 (punto_codigoI_9 -> .)
    MINUS           reduce using rule 127 (punto_codigoI_9 -> .)
    LT              reduce using rule 127 (punto_codigoI_9 -> .)
    GT              reduce using rule 127 (punto_codigoI_9 -> .)
    LTE             reduce using rule 127 (punto_codigoI_9 -> .)
    GTE             reduce using rule 127 (punto_codigoI_9 -> .)
    EQUAL           reduce using rule 127 (punto_codigoI_9 -> .)
    NEQUAL          reduce using rule 127 (punto_codigoI_9 -> .)
    AND             reduce using rule 127 (punto_codigoI_9 -> .)
    OR              reduce using rule 127 (punto_codigoI_9 -> .)
    FOR             reduce using rule 127 (punto_codigoI_9 -> .)
    WHILE           reduce using rule 127 (punto_codigoI_9 -> .)
    IF              reduce using rule 127 (punto_codigoI_9 -> .)
    ESCRITURA       reduce using rule 127 (punto_codigoI_9 -> .)
    LECTURA         reduce using rule 127 (punto_codigoI_9 -> .)
    VAR             reduce using rule 127 (punto_codigoI_9 -> .)
    ID              reduce using rule 127 (punto_codigoI_9 -> .)
    RETURN          reduce using rule 127 (punto_codigoI_9 -> .)
    RCURLY          reduce using rule 127 (punto_codigoI_9 -> .)
    RPAREN          reduce using rule 127 (punto_codigoI_9 -> .)
    COMMA           reduce using rule 127 (punto_codigoI_9 -> .)
    RBRACE          reduce using rule 127 (punto_codigoI_9 -> .)
    TO              reduce using rule 127 (punto_codigoI_9 -> .)

    punto_codigoI_9                shift and go to state 280

state 274

    (21) dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14 .

    FUNCION         reduce using rule 21 (dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14 .)
    MAIN            reduce using rule 21 (dec_func -> FUNCION punto_semantico_9 ID punto_semantico_10 LPAREN punto_semantico_3 dec_funcB RPAREN COLON tipo_func punto_semantico_13 LCURLY bloque RCURLY punto_semantico_14 .)


state 275

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY . punto_codigoII_10
    (140) punto_codigoII_10 -> .

    FOR             reduce using rule 140 (punto_codigoII_10 -> .)
    WHILE           reduce using rule 140 (punto_codigoII_10 -> .)
    IF              reduce using rule 140 (punto_codigoII_10 -> .)
    ESCRITURA       reduce using rule 140 (punto_codigoII_10 -> .)
    LECTURA         reduce using rule 140 (punto_codigoII_10 -> .)
    VAR             reduce using rule 140 (punto_codigoII_10 -> .)
    ID              reduce using rule 140 (punto_codigoII_10 -> .)
    RETURN          reduce using rule 140 (punto_codigoII_10 -> .)
    RCURLY          reduce using rule 140 (punto_codigoII_10 -> .)

    punto_codigoII_10              shift and go to state 281

state 276

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 . punto_codigoII_7 ASSIGN expresion punto_codigoII_8
    (137) punto_codigoII_7 -> .

    ASSIGN          reduce using rule 137 (punto_codigoII_7 -> .)

    punto_codigoII_7               shift and go to state 282

state 277

    (84) ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .

    FOR             reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    WHILE           reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    IF              reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    ESCRITURA       reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    LECTURA         reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    VAR             reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    ID              reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    RETURN          reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)
    RCURLY          reduce using rule 84 (ciclo_mientras -> WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6 .)


state 278

    (85) condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .

    FOR             reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    WHILE           reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    IF              reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    ESCRITURA       reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    LECTURA         reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    VAR             reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    ID              reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    RETURN          reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)
    RCURLY          reduce using rule 85 (condicion -> IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3 .)


state 279

    (86) condicionB -> ELSE punto_codigoII_2 . LCURLY bloque RCURLY

    LCURLY          shift and go to state 283


state 280

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 . llam_varsB2
    (45) llam_varsB2 -> . LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9
    (46) llam_varsB2 -> . empty
    (100) empty -> .

    LBRACE          shift and go to state 284
    ASSIGN          reduce using rule 100 (empty -> .)
    TIMES           reduce using rule 100 (empty -> .)
    DIVIDE          reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    LT              reduce using rule 100 (empty -> .)
    GT              reduce using rule 100 (empty -> .)
    LTE             reduce using rule 100 (empty -> .)
    GTE             reduce using rule 100 (empty -> .)
    EQUAL           reduce using rule 100 (empty -> .)
    NEQUAL          reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    FOR             reduce using rule 100 (empty -> .)
    WHILE           reduce using rule 100 (empty -> .)
    IF              reduce using rule 100 (empty -> .)
    ESCRITURA       reduce using rule 100 (empty -> .)
    LECTURA         reduce using rule 100 (empty -> .)
    VAR             reduce using rule 100 (empty -> .)
    ID              reduce using rule 100 (empty -> .)
    RETURN          reduce using rule 100 (empty -> .)
    RCURLY          reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)
    RBRACE          reduce using rule 100 (empty -> .)
    TO              reduce using rule 100 (empty -> .)

    llam_varsB2                    shift and go to state 285
    empty                          shift and go to state 286

state 281

    (82) ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .

    FOR             reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    WHILE           reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    IF              reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    ESCRITURA       reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    LECTURA         reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    VAR             reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    ID              reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    RETURN          reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)
    RCURLY          reduce using rule 82 (ciclo_para_cada -> FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10 .)


state 282

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 . ASSIGN expresion punto_codigoII_8

    ASSIGN          shift and go to state 287


state 283

    (86) condicionB -> ELSE punto_codigoII_2 LCURLY . bloque RCURLY
    (29) bloque -> . bloqueB bloqueBB
    (30) bloqueB -> . asignacion
    (31) bloqueB -> . ciclo_para_cada
    (32) bloqueB -> . ciclo_mientras
    (33) bloqueB -> . condicion
    (34) bloqueB -> . escribir
    (35) bloqueB -> . leer
    (36) bloqueB -> . dec_vars
    (37) bloqueB -> . llam_func
    (38) bloqueB -> . regresar
    (41) asignacion -> . llam_vars ASSIGN expresion punto_codigoI_12
    (82) ciclo_para_cada -> . FOR LPAREN ciclo_para_cadaB TO expresion punto_codigoII_9 RPAREN LCURLY bloque RCURLY punto_codigoII_10
    (84) ciclo_mientras -> . WHILE punto_codigoII_4 LPAREN expresion punto_codigoII_5 RPAREN LCURLY bloque RCURLY punto_codigoII_6
    (85) condicion -> . IF LPAREN expresion punto_codigoII_1 RPAREN LCURLY bloque RCURLY condicionB punto_codigoII_3
    (88) escribir -> . ESCRITURA LPAREN escribirB RPAREN
    (94) leer -> . LECTURA LPAREN leerB RPAREN
    (7) dec_vars -> . VAR punto_semantico_3 dec_varsI COLON tipo punto_semantico_5 dec_varsB punto_semantico_8 dec_varsBB
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (98) regresar -> . RETURN LPAREN expresion RPAREN
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6

    FOR             shift and go to state 60
    WHILE           shift and go to state 61
    IF              shift and go to state 62
    ESCRITURA       shift and go to state 63
    LECTURA         shift and go to state 64
    VAR             shift and go to state 10
    ID              shift and go to state 65
    RETURN          shift and go to state 66

    bloque                         shift and go to state 288
    bloqueB                        shift and go to state 49
    asignacion                     shift and go to state 50
    ciclo_para_cada                shift and go to state 51
    ciclo_mientras                 shift and go to state 52
    condicion                      shift and go to state 53
    escribir                       shift and go to state 54
    leer                           shift and go to state 55
    dec_vars                       shift and go to state 56
    llam_func                      shift and go to state 57
    regresar                       shift and go to state 58
    llam_vars                      shift and go to state 59

state 284

    (45) llam_varsB2 -> LBRACE . punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9
    (126) punto_codigoI_8 -> .

    LPAREN          reduce using rule 126 (punto_codigoI_8 -> .)
    CTEENT          reduce using rule 126 (punto_codigoI_8 -> .)
    CTEDECI         reduce using rule 126 (punto_codigoI_8 -> .)
    CTELETRA        reduce using rule 126 (punto_codigoI_8 -> .)
    CTEFRASE        reduce using rule 126 (punto_codigoI_8 -> .)
    ID              reduce using rule 126 (punto_codigoI_8 -> .)
    TRUE            reduce using rule 126 (punto_codigoI_8 -> .)
    FALSE           reduce using rule 126 (punto_codigoI_8 -> .)

    punto_codigoI_8                shift and go to state 289

state 285

    (43) llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .

    ASSIGN          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    TIMES           reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    DIVIDE          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    PLUS            reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    MINUS           reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    LT              reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    GT              reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    LTE             reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    GTE             reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    EQUAL           reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    NEQUAL          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    AND             reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    OR              reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    FOR             reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    WHILE           reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    IF              reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    ESCRITURA       reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    LECTURA         reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    VAR             reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    ID              reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    RETURN          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    RCURLY          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    RPAREN          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    COMMA           reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    RBRACE          reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)
    TO              reduce using rule 43 (llam_varsB -> LBRACE punto_arreglos_1 punto_codigoI_8 expresion punto_arreglos_2 punto_arreglos_4 RBRACE punto_codigoI_9 llam_varsB2 .)


state 286

    (46) llam_varsB2 -> empty .

    ASSIGN          reduce using rule 46 (llam_varsB2 -> empty .)
    TIMES           reduce using rule 46 (llam_varsB2 -> empty .)
    DIVIDE          reduce using rule 46 (llam_varsB2 -> empty .)
    PLUS            reduce using rule 46 (llam_varsB2 -> empty .)
    MINUS           reduce using rule 46 (llam_varsB2 -> empty .)
    LT              reduce using rule 46 (llam_varsB2 -> empty .)
    GT              reduce using rule 46 (llam_varsB2 -> empty .)
    LTE             reduce using rule 46 (llam_varsB2 -> empty .)
    GTE             reduce using rule 46 (llam_varsB2 -> empty .)
    EQUAL           reduce using rule 46 (llam_varsB2 -> empty .)
    NEQUAL          reduce using rule 46 (llam_varsB2 -> empty .)
    AND             reduce using rule 46 (llam_varsB2 -> empty .)
    OR              reduce using rule 46 (llam_varsB2 -> empty .)
    FOR             reduce using rule 46 (llam_varsB2 -> empty .)
    WHILE           reduce using rule 46 (llam_varsB2 -> empty .)
    IF              reduce using rule 46 (llam_varsB2 -> empty .)
    ESCRITURA       reduce using rule 46 (llam_varsB2 -> empty .)
    LECTURA         reduce using rule 46 (llam_varsB2 -> empty .)
    VAR             reduce using rule 46 (llam_varsB2 -> empty .)
    ID              reduce using rule 46 (llam_varsB2 -> empty .)
    RETURN          reduce using rule 46 (llam_varsB2 -> empty .)
    RCURLY          reduce using rule 46 (llam_varsB2 -> empty .)
    RPAREN          reduce using rule 46 (llam_varsB2 -> empty .)
    COMMA           reduce using rule 46 (llam_varsB2 -> empty .)
    RBRACE          reduce using rule 46 (llam_varsB2 -> empty .)
    TO              reduce using rule 46 (llam_varsB2 -> empty .)


state 287

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN . expresion punto_codigoII_8
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 290
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 288

    (86) condicionB -> ELSE punto_codigoII_2 LCURLY bloque . RCURLY

    RCURLY          shift and go to state 291


state 289

    (45) llam_varsB2 -> LBRACE punto_codigoI_8 . expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9
    (47) expresion -> . peta_exp
    (48) peta_exp -> . tera_exp punto_codigoI_4 peta_expB
    (52) tera_exp -> . mega_exp punto_codigoI_5 tera_expB
    (60) mega_exp -> . kilo_exp punto_codigoI_6 mega_expB
    (64) kilo_exp -> . factor punto_codigoI_7 kilo_expB
    (68) factor -> . LPAREN punto_codigoI_8 expresion RPAREN punto_codigoI_9
    (69) factor -> . llam_vars
    (70) factor -> . llam_func
    (71) factor -> . CTEENT punto_semantico_17 punto_codigoI_2
    (72) factor -> . CTEDECI punto_semantico_17 punto_codigoI_2
    (73) factor -> . cte_bool punto_semantico_17 punto_codigoI_2
    (74) factor -> . CTELETRA punto_semantico_17 punto_codigoI_2
    (75) factor -> . CTEFRASE punto_semantico_17 punto_codigoI_2
    (42) llam_vars -> . ID punto_codigoI_1 llam_varsB punto_arreglos_6
    (76) llam_func -> . ID LPAREN llam_params RPAREN
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    LPAREN          shift and go to state 102
    CTEENT          shift and go to state 104
    CTEDECI         shift and go to state 105
    CTELETRA        shift and go to state 107
    CTEFRASE        shift and go to state 108
    ID              shift and go to state 109
    TRUE            shift and go to state 110
    FALSE           shift and go to state 111

    expresion                      shift and go to state 292
    peta_exp                       shift and go to state 97
    tera_exp                       shift and go to state 98
    mega_exp                       shift and go to state 99
    kilo_exp                       shift and go to state 100
    factor                         shift and go to state 101
    llam_vars                      shift and go to state 95
    llam_func                      shift and go to state 103
    cte_bool                       shift and go to state 106

state 290

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion . punto_codigoII_8
    (138) punto_codigoII_8 -> .

    TO              reduce using rule 138 (punto_codigoII_8 -> .)

    punto_codigoII_8               shift and go to state 293

state 291

    (86) condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .

    FOR             reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    WHILE           reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    IF              reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    ESCRITURA       reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    LECTURA         reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    VAR             reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    ID              reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    RETURN          reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)
    RCURLY          reduce using rule 86 (condicionB -> ELSE punto_codigoII_2 LCURLY bloque RCURLY .)


state 292

    (45) llam_varsB2 -> LBRACE punto_codigoI_8 expresion . punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9
    (143) punto_arreglos_3 -> .

    RBRACE          reduce using rule 143 (punto_arreglos_3 -> .)

    punto_arreglos_3               shift and go to state 294

state 293

    (83) ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8 .

    TO              reduce using rule 83 (ciclo_para_cadaB -> VAR punto_semantico_3 ID punto_semantico_4 COLON tipo punto_semantico_5 punto_semantico_8 punto_codigoII_7 ASSIGN expresion punto_codigoII_8 .)


state 294

    (45) llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 . punto_arreglos_5 RBRACE punto_codigoI_9
    (145) punto_arreglos_5 -> .

    RBRACE          reduce using rule 145 (punto_arreglos_5 -> .)

    punto_arreglos_5               shift and go to state 295

state 295

    (45) llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 . RBRACE punto_codigoI_9

    RBRACE          shift and go to state 296


state 296

    (45) llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE . punto_codigoI_9
    (127) punto_codigoI_9 -> .

    ASSIGN          reduce using rule 127 (punto_codigoI_9 -> .)
    TIMES           reduce using rule 127 (punto_codigoI_9 -> .)
    DIVIDE          reduce using rule 127 (punto_codigoI_9 -> .)
    PLUS            reduce using rule 127 (punto_codigoI_9 -> .)
    MINUS           reduce using rule 127 (punto_codigoI_9 -> .)
    LT              reduce using rule 127 (punto_codigoI_9 -> .)
    GT              reduce using rule 127 (punto_codigoI_9 -> .)
    LTE             reduce using rule 127 (punto_codigoI_9 -> .)
    GTE             reduce using rule 127 (punto_codigoI_9 -> .)
    EQUAL           reduce using rule 127 (punto_codigoI_9 -> .)
    NEQUAL          reduce using rule 127 (punto_codigoI_9 -> .)
    AND             reduce using rule 127 (punto_codigoI_9 -> .)
    OR              reduce using rule 127 (punto_codigoI_9 -> .)
    FOR             reduce using rule 127 (punto_codigoI_9 -> .)
    WHILE           reduce using rule 127 (punto_codigoI_9 -> .)
    IF              reduce using rule 127 (punto_codigoI_9 -> .)
    ESCRITURA       reduce using rule 127 (punto_codigoI_9 -> .)
    LECTURA         reduce using rule 127 (punto_codigoI_9 -> .)
    VAR             reduce using rule 127 (punto_codigoI_9 -> .)
    ID              reduce using rule 127 (punto_codigoI_9 -> .)
    RETURN          reduce using rule 127 (punto_codigoI_9 -> .)
    RCURLY          reduce using rule 127 (punto_codigoI_9 -> .)
    RPAREN          reduce using rule 127 (punto_codigoI_9 -> .)
    COMMA           reduce using rule 127 (punto_codigoI_9 -> .)
    RBRACE          reduce using rule 127 (punto_codigoI_9 -> .)
    TO              reduce using rule 127 (punto_codigoI_9 -> .)

    punto_codigoI_9                shift and go to state 297

state 297

    (45) llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .

    ASSIGN          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    TIMES           reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    DIVIDE          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    PLUS            reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    MINUS           reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    LT              reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    GT              reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    LTE             reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    GTE             reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    EQUAL           reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    NEQUAL          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    AND             reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    OR              reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    FOR             reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    WHILE           reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    IF              reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    ESCRITURA       reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    LECTURA         reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    VAR             reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    ID              reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    RETURN          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    RCURLY          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    RPAREN          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    COMMA           reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    RBRACE          reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)
    TO              reduce using rule 45 (llam_varsB2 -> LBRACE punto_codigoI_8 expresion punto_arreglos_3 punto_arreglos_5 RBRACE punto_codigoI_9 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: reduce/reduce conflict in state 199 resolved using rule (factor -> CTEFRASE punto_semantico_17 punto_codigoI_2)
WARNING: rejected rule (punto_codigoI_10 -> <empty>) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (factor -> CTELETRA punto_semantico_17 punto_codigoI_2)
WARNING: rejected rule (punto_codigoI_10 -> <empty>) in state 200
